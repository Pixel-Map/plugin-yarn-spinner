{
  "version": 3,
  "sources": ["../../node_modules/yarn-bound-ts/src/results.ts", "../../node_modules/yarn-bound-ts/src/line-parser.ts", "../../node_modules/yarn-bound-ts/src/convert-yarn-to-js.ts", "../../node_modules/yarn-bound-ts/src/default-variable-storage.ts", "../../node_modules/yarn-bound-ts/src/parser/nodes.ts", "../../node_modules/yarn-bound-ts/src/lexer/tokens.ts", "../../node_modules/yarn-bound-ts/src/lexer/lexer-state.ts", "../../node_modules/yarn-bound-ts/src/lexer/states.ts", "../../node_modules/yarn-bound-ts/src/lexer/lexer.ts", "../../node_modules/yarn-bound-ts/src/parser/compiled-parser.ts", "../../node_modules/yarn-bound-ts/src/parser/parser.ts", "../../node_modules/yarn-bound-ts/src/runner.ts", "../../node_modules/yarn-bound-ts/src/yarn-bound.ts", "../../node_modules/yarn-bound-ts/src/index.ts", "../../node_modules/lodash.get/index.js", "../../src/index.ts", "../../src/commands/add_gold.ts", "../../src/enums.ts", "../../src/utils.ts", "../../src/commands/add_item.ts", "../../src/commands/change_weather.ts", "../../src/commands/fade_in.ts", "../../src/commands/fade_out.ts", "../../src/commands/flash_screen.ts", "../../src/commands/hide_event.ts", "../../src/commands/move_event.ts", "../../src/commands/move_self.ts", "../../src/commands/play_music.ts", "../../src/commands/play_sound.ts", "../../src/commands/remove_gold.ts", "../../src/commands/remove_item.ts", "../../src/commands/set_background.ts", "../../src/commands/set_facing.ts", "../../src/commands/set_level.ts", "../../src/commands/set_self_facing.ts", "../../src/commands/show_balloon.ts", "../../src/commands/show_event.ts", "../../src/commands/stop_music.ts", "../../src/commands/sync_move_event.ts", "../../src/commands/sync_move_self.ts", "../../src/commands/teleport_event.ts", "../../src/commands/teleport_self.ts", "../../src/commands/wait.ts", "../../src/commands/index.ts", "../../src/functions/get_variable.ts", "../../src/playerHasItemByName.ts", "../../src/functions/has_item.ts", "../../src/functions/item_count.ts", "../../src/functions/random_range.ts", "../../src/functions/index.ts", "../../src/wrap.ts", "../../src/processor/updateCharacterPortrait.ts", "../../src/processor/addFormattedGameMessage.ts", "../../src/split-spaces-exclude-quotes.ts", "../../node_modules/yaml/browser/dist/index.js", "../../node_modules/yaml/browser/dist/nodes/Node.js", "../../node_modules/yaml/browser/dist/visit.js", "../../node_modules/yaml/browser/dist/doc/directives.js", "../../node_modules/yaml/browser/dist/doc/anchors.js", "../../node_modules/yaml/browser/dist/nodes/Alias.js", "../../node_modules/yaml/browser/dist/nodes/toJS.js", "../../node_modules/yaml/browser/dist/nodes/Scalar.js", "../../node_modules/yaml/browser/dist/doc/createNode.js", "../../node_modules/yaml/browser/dist/nodes/Collection.js", "../../node_modules/yaml/browser/dist/stringify/stringifyComment.js", "../../node_modules/yaml/browser/dist/stringify/foldFlowLines.js", "../../node_modules/yaml/browser/dist/stringify/stringifyString.js", "../../node_modules/yaml/browser/dist/stringify/stringify.js", "../../node_modules/yaml/browser/dist/stringify/stringifyPair.js", "../../node_modules/yaml/browser/dist/log.js", "../../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js", "../../node_modules/yaml/browser/dist/nodes/Pair.js", "../../node_modules/yaml/browser/dist/stringify/stringifyCollection.js", "../../node_modules/yaml/browser/dist/nodes/YAMLMap.js", "../../node_modules/yaml/browser/dist/schema/common/map.js", "../../node_modules/yaml/browser/dist/nodes/YAMLSeq.js", "../../node_modules/yaml/browser/dist/schema/common/seq.js", "../../node_modules/yaml/browser/dist/schema/common/string.js", "../../node_modules/yaml/browser/dist/schema/common/null.js", "../../node_modules/yaml/browser/dist/schema/core/bool.js", "../../node_modules/yaml/browser/dist/stringify/stringifyNumber.js", "../../node_modules/yaml/browser/dist/schema/core/float.js", "../../node_modules/yaml/browser/dist/schema/core/int.js", "../../node_modules/yaml/browser/dist/schema/core/schema.js", "../../node_modules/yaml/browser/dist/schema/json/schema.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js", "../../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js", "../../node_modules/yaml/browser/dist/schema/tags.js", "../../node_modules/yaml/browser/dist/schema/Schema.js", "../../node_modules/yaml/browser/dist/stringify/stringifyDocument.js", "../../node_modules/yaml/browser/dist/doc/applyReviver.js", "../../node_modules/yaml/browser/dist/doc/Document.js", "../../node_modules/yaml/browser/dist/errors.js", "../../node_modules/yaml/browser/dist/compose/resolve-props.js", "../../node_modules/yaml/browser/dist/compose/util-contains-newline.js", "../../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js", "../../node_modules/yaml/browser/dist/compose/util-map-includes.js", "../../node_modules/yaml/browser/dist/compose/resolve-block-map.js", "../../node_modules/yaml/browser/dist/compose/resolve-block-seq.js", "../../node_modules/yaml/browser/dist/compose/resolve-end.js", "../../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js", "../../node_modules/yaml/browser/dist/compose/compose-collection.js", "../../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js", "../../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js", "../../node_modules/yaml/browser/dist/compose/compose-scalar.js", "../../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js", "../../node_modules/yaml/browser/dist/compose/compose-node.js", "../../node_modules/yaml/browser/dist/compose/compose-doc.js", "../../node_modules/yaml/browser/dist/compose/composer.js", "../../node_modules/yaml/browser/dist/parse/cst.js", "../../node_modules/yaml/browser/dist/parse/cst-scalar.js", "../../node_modules/yaml/browser/dist/parse/cst-stringify.js", "../../node_modules/yaml/browser/dist/parse/cst-visit.js", "../../node_modules/yaml/browser/dist/parse/lexer.js", "../../node_modules/yaml/browser/dist/parse/line-counter.js", "../../node_modules/yaml/browser/dist/parse/parser.js", "../../node_modules/yaml/browser/dist/public-api.js", "../../node_modules/yaml/browser/index.js", "../../src/docUtils/capitalizeFirstLetter.ts", "../../src/stardewMode/index.ts"],
  "sourcesContent": ["class Result {}\n\nexport class TextResult extends Result {\n  /**\n   * Create a text display result\n   * @param text text to be displayed\n   * @param hashtags the hashtags for the line\n   * @param metadata the parent yarn data\n   */\n  public text: string;\n  public hashtags: string[] | undefined;\n  public metadata: Metadata | undefined;\n\n  constructor(text: string, hashtags?: string[], metadata?: Metadata) {\n    super();\n    this.text = text;\n    this.hashtags = hashtags;\n    this.metadata = metadata;\n  }\n}\n\nexport class CommandResult extends Result {\n  /**\n   * Return a command string\n   * @param command the command text\n   * @param hashtags the hashtags for the line\n   * @param metadata the parent yarn data\n   */\n  public command: string;\n  public hashtags: string[];\n  public metadata: Metadata;\n\n  constructor(command: string, hashtags: string[], metadata: Metadata) {\n    super();\n    this.command = command;\n    this.hashtags = hashtags;\n    this.metadata = metadata;\n  }\n}\n\nexport class OptionResult extends Result {\n  /**\n   * Strip down Conditional option for presentation\n   * @param text option text to display\n   * @param isAvailable whether option is available\n   * @param hashtags the hashtags for the line\n   * @param {object} [metadata] the parent yarn data\n   */\n  public text: string;\n  public isAvailable: boolean;\n  public hashtags: string[];\n  public metadata: Metadata;\n\n  constructor(text: string, isAvailable = true, hashtags: string[] = [], metadata: Metadata) {\n    super();\n    this.text = text;\n    this.isAvailable = isAvailable;\n    this.hashtags = hashtags;\n    this.metadata = metadata;\n  }\n}\n\nexport class OptionsResult extends Result {\n  /**\n   * Create a selectable list of options from the given list of text\n   * @param {Node[]} [options] list of the text of options to be shown\n   * @param {object} [metadata] the parent yarn data\n   */\n  public options: OptionResult[];\n  public metadata: Metadata;\n  public selected: number | undefined;\n\n  constructor(options: Option[], metadata: Metadata) {\n    super();\n    this.options = options.map((s) => {\n      // @ts-ignore\n      return new OptionResult(s.text, s.isAvailable, s.hashtags);\n    });\n    this.metadata = metadata;\n  }\n\n  select(index = -1) {\n    if (index < 0 || index >= this.options.length) {\n      throw new Error(`Cannot select option #${index}, there are ${this.options.length} options`);\n    }\n    this.selected = index;\n  }\n}\n\nexport interface Metadata {\n  title: string;\n  filetags: string[];\n}\n\nexport interface Option {\n  text: string;\n  isAvailable: boolean;\n  hashtags: string[];\n}\n\nexport interface Markups {\n  name: string;\n  properties: Record<string, any>;\n}\n\n", "// @ts-nocheck\n// mutates node, processing [markup /] and `character:`\nexport default function parseLine(node, locale) {\n  node.markup = [];\n  parseCharacterLabel(node);\n  parseMarkup(node, locale);\n  node.text = node.text.replace(/(?:\\\\(.))/g, '$1');\n}\n\nfunction parseCharacterLabel(node) {\n  const match = node.text.match(/^(\\S+):\\s+/);\n  if (match) {\n    node.text = node.text.replace(match[0], '');\n    node.markup.push({ name: 'character', properties: { name: match[1] } });\n  }\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction parseMarkup(node, locale) {\n  const attributes = [];\n  let noMarkup = false;\n\n  const attributeRegex = /(^|[^\\\\])\\[(.*?[^\\\\])\\](.|$)/;\n  let textRemaining = node.text;\n  let resultText = '';\n  let match = textRemaining.match(attributeRegex);\n  while (match) {\n    const { index } = match;\n    const [wholeMatch, charBefore, contents, charAfter] = match;\n    const hasLeadingSpace = /\\s/.test(charBefore);\n    const hasTrailingSpace = /\\s/.test(charAfter);\n\n    const attribute = {\n      ...parseAttributeContents(contents, locale),\n      position: resultText.length + index + charBefore.length,\n    };\n\n    if (!noMarkup || attribute.name === 'nomarkup') {\n      const isReplacementTag =\n        attribute.name === 'select' || attribute.name === 'plural' || attribute.name === 'ordinal';\n      const shouldTrim =\n        !isReplacementTag &&\n        attribute.isSelfClosing &&\n        attribute.properties &&\n        attribute.properties.trimwhitespace !== false &&\n        ((index === 0 && hasTrailingSpace) || (hasLeadingSpace && hasTrailingSpace));\n      if (attribute.properties) {\n        delete attribute.properties.trimwhitespace;\n      }\n      const replacement = charBefore + (attribute.replacement || '') + (shouldTrim ? charAfter.slice(1) : charAfter);\n\n      textRemaining = textRemaining.replace(attributeRegex, replacement);\n      // inner slices are because charAfter could be an opening square bracket\n      resultText += textRemaining.slice(0, index + replacement.slice(1).length);\n      textRemaining = textRemaining.slice(index + replacement.slice(1).length);\n      if (!isReplacementTag && attribute.name !== 'nomarkup') {\n        attributes.push(attribute);\n      }\n    } else {\n      // -1s are because charAfter could be an opening square bracket\n      resultText += textRemaining.slice(0, index + wholeMatch.length - 1);\n      textRemaining = textRemaining.slice(index + wholeMatch.length - 1);\n    }\n\n    if (attribute.name === 'nomarkup') {\n      noMarkup = !attribute.isClosing;\n    }\n\n    match = textRemaining.match(attributeRegex);\n  }\n\n  node.text = resultText + textRemaining;\n\n  // Escaped bracket support might need some TLC.\n  const escapedCharacterRegex = /\\\\(\\[|\\])/;\n  match = node.text.match(escapedCharacterRegex);\n  textRemaining = node.text;\n  resultText = '';\n  while (match) {\n    const char = match[1];\n    attributes.forEach((attr) => {\n      if (attr.position > resultText.length + match.index) {\n        attr.position -= 1;\n      }\n    });\n    textRemaining = textRemaining.replace(escapedCharacterRegex, char);\n    resultText += textRemaining.slice(0, match.index + 1);\n    textRemaining = textRemaining.slice(match.index + 1);\n\n    match = textRemaining.match(escapedCharacterRegex);\n  }\n\n  node.text = resultText + textRemaining;\n\n  const openTagStacks = {};\n  attributes.forEach((attr) => {\n    if (!openTagStacks[attr.name]) {\n      openTagStacks[attr.name] = [];\n    }\n\n    if (attr.isClosing && !openTagStacks[attr.name].length) {\n      throw new Error(`Encountered closing ${attr.name} tag before opening tag`);\n    } else if (attr.isClosing) {\n      const openTag = openTagStacks[attr.name].pop();\n      node.markup.push({\n        name: openTag.name,\n        position: openTag.position,\n        properties: openTag.properties,\n        length: attr.position - openTag.position,\n      });\n    } else if (attr.isSelfClosing) {\n      node.markup.push({\n        name: attr.name,\n        position: attr.position,\n        properties: attr.properties,\n        length: 0,\n      });\n    } else if (attr.isCloseAll) {\n      const openTags = Object.values(openTagStacks).flat();\n      while (openTags.length) {\n        const openTag = openTags.pop();\n        node.markup.push({\n          name: openTag.name,\n          position: openTag.position,\n          properties: openTag.properties,\n          length: attr.position - openTag.position,\n        });\n      }\n    } else {\n      openTagStacks[attr.name].push({\n        name: attr.name,\n        position: attr.position,\n        properties: attr.properties,\n      });\n    }\n  });\n}\n\nfunction parseAttributeContents(contents, locale) {\n  const nameMatch = contents.match(/^\\/?([^\\s=/]+)(\\/|\\s|$)/);\n  const isClosing = contents[0] === '/';\n  const isSelfClosing = contents[contents.length - 1] === '/';\n  const isCloseAll = contents === '/';\n  if (isCloseAll) {\n    return { name: 'closeall', isCloseAll: true };\n  } else if (isClosing) {\n    return { name: nameMatch[1], isClosing: true };\n  } else {\n    const propertyAssignmentsText = nameMatch ? contents.replace(nameMatch[0], '') : contents;\n    const propertyAssignments = propertyAssignmentsText.match(/(\\S+?\".*?\"|[^\\s/]+)/g);\n    let properties = {};\n    if (propertyAssignments) {\n      properties = propertyAssignments.reduce((acc, propAss) => {\n        return { ...acc, ...parsePropertyAssignment(propAss) };\n      }, {});\n    }\n\n    const name = (nameMatch && nameMatch[1]) || Object.keys(properties)[0];\n\n    let replacement;\n    if (name === 'select') {\n      replacement = processSelectAttribute(properties);\n    } else if (name === 'plural') {\n      replacement = processPluralAttribute(properties, locale);\n    } else if (name === 'ordinal') {\n      replacement = processOrdinalAttribute(properties, locale);\n    }\n\n    return {\n      name,\n      properties,\n      isSelfClosing,\n      replacement,\n    };\n  }\n}\n\nfunction parsePropertyAssignment(propAss) {\n  const [propName, ...rest] = propAss.split('=');\n  const stringValue = rest.join('='); // just in case string value had a = in it\n  if (!propName || !stringValue) {\n    throw new Error(`Invalid markup property assignment: ${propAss}`);\n  }\n  let value;\n  if (stringValue === 'true' || stringValue === 'false') {\n    value = stringValue === 'true';\n  } else if (/^-?\\d*\\.?\\d+$/.test(stringValue)) {\n    value = +stringValue;\n  } else if (stringValue[0] === '\"' && stringValue[stringValue.length - 1] === '\"') {\n    value = stringValue.slice(1, -1);\n  } else {\n    value = stringValue;\n  }\n  return { [propName]: value };\n}\n\nfunction processSelectAttribute(properties) {\n  return properties[properties.value];\n}\n\nfunction processPluralAttribute(properties, locale) {\n  return properties[new Intl.PluralRules(locale).select(properties.value)].replace(/%/g, properties.value);\n}\n\nfunction processOrdinalAttribute(properties, locale) {\n  return properties[new Intl.PluralRules(locale, { type: 'ordinal' }).select(properties.value)].replace(\n    /%/g,\n    properties.value,\n  );\n}\n", "// @ts-nocheck\n/* eslint-disable */\n/*\nYoinked from YarnEditor source and modified to limit size and scope:\n\nhttps://github.com/YarnSpinnerTool/YarnEditor/blob/master/src/js/classes/data.js\n\nIncluding as a dependency would be large and subject to breakage, so we adapt it instead.\n\nI guess this counts as a \"substantial portion\" (?), so:\n\n--------------\n\n\nCopyright (c) 2015 Infinite Ammo Inc. and Yarn Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n/* eslint-enable */\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport default function convertYarnToJS(content) {\n  const objects = [];\n\n  const lines = content.split(/\\r?\\n+/).filter((line) => {\n    return !line.match(/^\\s*$/);\n  });\n\n  let obj = null;\n  let readingBody = false;\n  let filetags;\n\n  // per-node, we will uniformly strip leading space\n  // which can result from constructing dialogues\n  // using template strings.\n  let leadingSpace = '';\n\n  let i = 0;\n  while (lines[i].trim()[0] === '#') {\n    if (!filetags) filetags = [];\n    filetags.push(lines[i].trim().substr(1));\n    i += 1;\n  }\n  for (; i < lines.length; i += 1) {\n    if (lines[i].trim() === '===') {\n      readingBody = false;\n      if (filetags) obj.filetags = filetags;\n      objects.push(obj);\n      obj = null;\n    } else if (readingBody) {\n      obj.body += `${lines[i].replace(leadingSpace, '')}\\n`;\n    } else if (lines[i].trim() === '---') {\n      readingBody = true;\n      obj.body = '';\n      leadingSpace = lines[i].match(/^\\s*/)[0];\n    } else if (lines[i].indexOf(':') > -1) {\n      const [key, value] = lines[i].split(':');\n      const trimmedKey = key.trim();\n      const trimmedValue = value.trim();\n      if (trimmedKey !== 'body') {\n        if (obj == null) obj = {};\n        if (obj[trimmedKey]) {\n          throw new Error(`Duplicate tag on node: ${trimmedKey}`);\n        }\n        obj[trimmedKey] = trimmedValue;\n      }\n    }\n  }\n  return objects;\n}\n", "// @ts-nocheck\n'use strict';\n\nclass DefaultVariableStorage {\n  constructor() {\n    this.data = {};\n  }\n\n  set(name, value) {\n    this.data[name] = value;\n  }\n\n  // Called when a variable is being evaluated.\n  get(name) {\n    return this.data[name];\n  }\n}\n\nexport default DefaultVariableStorage;\n", "// @ts-nocheck\n'use strict';\n\nclass Text {}\nclass Shortcut {}\nclass Conditional {}\nclass Assignment {}\nclass Literal {}\nclass Expression {}\nclass FunctionCall {}\nclass Command {}\n\nexport default {\n  types: {\n    Text,\n    Shortcut,\n    Conditional,\n    Assignment,\n    Literal,\n    Expression,\n    FunctionCall,\n    Command,\n  },\n\n  // /////////////// Dialog Nodes\n\n  DialogShortcutNode: class extends Shortcut {\n    constructor(text, content, lineNo, hashtags = [], conditionalExpression) {\n      super();\n      this.type = 'DialogShortcutNode';\n      this.text = text;\n      this.content = content;\n      this.lineNum = lineNo.first_line;\n      this.hashtags = hashtags;\n      this.conditionalExpression = conditionalExpression;\n    }\n  },\n\n  // /////////////// Conditional Nodes\n  IfNode: class extends Conditional {\n    constructor(expression, statement) {\n      super();\n      this.type = 'IfNode';\n      this.expression = expression;\n      this.statement = statement;\n    }\n  },\n\n  IfElseNode: class extends Conditional {\n    constructor(expression, statement, elseStatement) {\n      super();\n      this.type = 'IfElseNode';\n      this.expression = expression;\n      this.statement = statement;\n      this.elseStatement = elseStatement;\n    }\n  },\n\n  ElseNode: class extends Conditional {\n    constructor(statement) {\n      super();\n      this.type = 'ElseNode';\n      this.statement = statement;\n    }\n  },\n\n  ElseIfNode: class extends Conditional {\n    constructor(expression, statement, elseStatement) {\n      super();\n      this.type = 'ElseIfNode';\n      this.expression = expression;\n      this.statement = statement;\n      this.elseStatement = elseStatement;\n    }\n  },\n\n  // /////////////// Command Nodes\n  GenericCommandNode: class extends Command {\n    constructor(command, lineNo, hashtags = []) {\n      super();\n      this.type = 'GenericCommandNode';\n      this.command = command;\n      this.hashtags = hashtags;\n      this.lineNum = lineNo.first_line;\n    }\n  },\n\n  JumpCommandNode: class extends Command {\n    constructor(destination) {\n      super();\n      this.type = 'JumpCommandNode';\n      this.destination = destination;\n    }\n  },\n\n  StopCommandNode: class extends Command {\n    constructor() {\n      super();\n      this.type = 'StopCommandNode';\n    }\n  },\n\n  // /////////////// Contents Nodes\n  TextNode: class extends Text {\n    constructor(text, lineNo, hashtags = []) {\n      super();\n      this.type = 'TextNode';\n      this.text = text;\n      this.lineNum = lineNo.first_line;\n      this.hashtags = hashtags;\n    }\n  },\n\n  EscapedCharacterNode: class extends Text {\n    constructor(text, lineNo, hashtags = []) {\n      super();\n      this.type = 'EscapedCharacterNode';\n      this.text = text;\n      this.lineNum = lineNo.first_line;\n      this.hashtags = hashtags;\n    }\n  },\n\n  // /////////////// Literal Nodes\n  NumericLiteralNode: class extends Literal {\n    constructor(numericLiteral) {\n      super();\n      this.type = 'NumericLiteralNode';\n      this.numericLiteral = numericLiteral;\n    }\n  },\n\n  StringLiteralNode: class extends Literal {\n    constructor(stringLiteral) {\n      super();\n      this.type = 'StringLiteralNode';\n      this.stringLiteral = stringLiteral;\n    }\n  },\n\n  BooleanLiteralNode: class extends Literal {\n    constructor(booleanLiteral) {\n      super();\n      this.type = 'BooleanLiteralNode';\n      this.booleanLiteral = booleanLiteral;\n    }\n  },\n\n  VariableNode: class extends Literal {\n    constructor(variableName) {\n      super();\n      this.type = 'VariableNode';\n      this.variableName = variableName;\n    }\n  },\n\n  // /////////////// Arithmetic Expression Nodes\n  UnaryMinusExpressionNode: class extends Expression {\n    constructor(readonly expression: Expression) {\n      super();\n      this.type = 'UnaryMinusExpressionNode';\n    }\n  },\n\n  ArithmeticExpressionAddNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionAddNode';\n    }\n  },\n\n  ArithmeticExpressionMinusNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionMinusNode';\n    }\n  },\n\n  ArithmeticExpressionMultiplyNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionMultiplyNode';\n    }\n  },\n\n  ArithmeticExpressionExponentNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionExponentNode';\n    }\n  },\n\n  ArithmeticExpressionDivideNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionDivideNode';\n    }\n  },\n\n  ArithmeticExpressionModuloNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'ArithmeticExpressionModuloNode';\n    }\n  },\n  // /////////////// Boolean Expression Nodes\n\n  NegatedBooleanExpressionNode: class extends Expression {\n    constructor(readonly expression: Expression) {\n      super();\n      this.type = 'NegatedBooleanExpressionNode';\n    }\n  },\n\n  BooleanOrExpressionNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'BooleanOrExpressionNode';\n    }\n  },\n\n  BooleanAndExpressionNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'BooleanAndExpressionNode';\n    }\n  },\n  BooleanXorExpressionNode: class extends Expression {\n    constructor(readonly expression1: Expression, readonly expression2: Expression) {\n      super();\n      this.type = 'BooleanXorExpressionNode';\n    }\n  },\n\n  EqualToExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'EqualToExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  NotEqualToExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'NotEqualToExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  GreaterThanExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'GreaterThanExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  GreaterThanOrEqualToExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'GreaterThanOrEqualToExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  LessThanExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'LessThanExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  LessThanOrEqualToExpressionNode: class extends Expression {\n    constructor(expression1, expression2) {\n      super();\n      this.type = 'LessThanOrEqualToExpressionNode';\n      this.expression1 = expression1;\n      this.expression2 = expression2;\n    }\n  },\n\n  // /////////////// Assignment Expression Nodes\n\n  SetVariableEqualToNode: class extends Assignment {\n    constructor(variableName, expression) {\n      super();\n      this.type = 'SetVariableEqualToNode';\n      this.variableName = variableName;\n      this.expression = expression;\n    }\n  },\n\n  // /////////////// Function Nodes\n\n  FunctionCallNode: class extends FunctionCall {\n    constructor(functionName, args, lineNo, hashtags = []) {\n      super();\n      this.type = 'FunctionCallNode';\n      this.functionName = functionName;\n      this.args = args;\n      this.lineNum = lineNo.first_line;\n      this.hashtags = hashtags;\n    }\n  },\n\n  // /////////////// Inline Expression\n  InlineExpressionNode: class extends Expression {\n    constructor(expression, lineNo, hashtags = []) {\n      super();\n      this.type = 'InlineExpressionNode';\n      this.expression = expression;\n      this.lineNum = lineNo.first_line;\n      this.hashtags = hashtags;\n    }\n  },\n};\n", "// @ts-nocheck\n'use strict';\n\n/**\n * Token identifier -> regular expression to match the lexeme. That's a list of all the token\n * which can be emitted by the lexer. For now, we're slightly bending the style guide,\n * to make sure the debug output of the javascript lexer will (kinda) match the original C# one.\n */\n/* eslint-disable key-spacing */\nconst Tokens = {\n  // Special tokens\n  Whitespace: null, // (not used currently)\n  Indent: null,\n  Dedent: null,\n  EndOfLine: /\\n/,\n  EndOfInput: null,\n\n  // Literals in (\"<<commands>>\")\n  Number: /-?[0-9]+(\\.[0-9+])?/,\n  String: /\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"/,\n\n  // Command syntax (\"<<foo>>\")\n  BeginCommand: /<</,\n  EndCommand: />>/,\n\n  // Variables (\"$foo\")\n  Variable: /\\$([A-Za-z0-9_.])+/,\n\n  // Shortcut syntax (\"->\")\n  ShortcutOption: /->/,\n\n  // Hashtag (\"#something\")\n  Hashtag: /#([^(\\s|#|//)]+)/, // seems a little hacky to explicitly consider comments here\n\n  // Comment (\"// some stuff\")\n  Comment: /\\/\\/.*/,\n\n  // Option syntax (\"[[Let's go here|Destination]]\")\n  OptionStart: /\\[\\[/, // [[\n  OptionDelimit: /\\|/, // |\n  OptionEnd: /\\]\\]/, // ]]\n\n  // Command types (specially recognized command word)\n  If: /if(?!\\w)/,\n  ElseIf: /elseif(?!\\w)/,\n  Else: /else(?!\\w)/,\n  EndIf: /endif(?!\\w)/,\n  Jump: /jump(?!\\w)/,\n  Stop: /stop(?!\\w)/,\n  Set: /set(?!\\w)/,\n  Declare: /declare(?!\\w)/,\n  As: /as(?!\\w)/,\n  ExplicitType: /(String|Number|Bool)(?=>>)/,\n\n  // Boolean values\n  True: /true(?!\\w)/,\n  False: /false(?!\\w)/,\n\n  // The null value\n  Null: /null(?!\\w)/,\n\n  // Parentheses\n  LeftParen: /\\(/,\n  RightParen: /\\)/,\n\n  // Parameter delimiters\n  Comma: /,/,\n\n  // Operators\n  UnaryMinus: /-(?!\\s)/,\n\n  EqualTo: /(==|is(?!\\w)|eq(?!\\w))/, // ==, eq, is\n  GreaterThan: /(>|gt(?!\\w))/, // >, gt\n  GreaterThanOrEqualTo: /(>=|gte(?!\\w))/, // >=, gte\n  LessThan: /(<|lt(?!\\w))/, // <, lt\n  LessThanOrEqualTo: /(<=|lte(?!\\w))/, // <=, lte\n  NotEqualTo: /(!=|neq(?!\\w))/, // !=, neq\n\n  // Logical operators\n  Or: /(\\|\\||or(?!\\w))/, // ||, or\n  And: /(&&|and(?!\\w))/, // &&, and\n  Xor: /(\\^|xor(?!\\w))/, // ^, xor\n  Not: /(!|not(?!\\w))/, // !, not\n\n  // this guy's special because '=' can mean either 'equal to'\n  // or 'becomes' depending on context\n  EqualToOrAssign: /(=|to(?!\\w))/, // =, to\n\n  Add: /\\+/, // +\n  Minus: /-/, // -\n  Exponent: /\\*\\*/, // **\n  Multiply: /\\*/, // *\n  Divide: /\\//, // /\n  Modulo: /%/, // /\n\n  AddAssign: /\\+=/, // +=\n  MinusAssign: /-=/, // -=\n  MultiplyAssign: /\\*=/, // *=\n  DivideAssign: /\\/=/, // /=\n\n  Identifier: /[a-zA-Z0-9_:.]+/, // a single word (used for functions)\n\n  EscapedCharacter: /\\\\./, // for escaping \\# special characters\n  Text: /[^\\\\]/, // generic until we hit other syntax\n\n  // Braces are used for inline expressions. Ignore escaped braces\n  // TODO: doesn't work ios\n  BeginInlineExp: /{/, // {\n  EndInlineExp: /}/, // }\n};\n/* eslint-enable key-spacing */\n\nexport default Tokens;\n", "// @ts-nocheck\n'use strict';\n\nimport Tokens from './tokens';\n\n/**\n * A LexState object represents one of the states in which the lexer can be.\n */\nclass LexerState {\n  constructor() {\n    /** A list of transition for the given state. */\n    this.transitions = [];\n    /** A special, unique transition for matching spans of text in any state. */\n    this.textRule = null;\n    /**\n     * Whether or not this state is context-bound by indentation\n     * (will make the lexer emit Indent and Dedent tokens).\n     */\n    this.isTrackingNextIndentation = false;\n  }\n\n  /**\n   * addTransition - Define a new transition for this state.\n   *\n   * @param  {type} token - the token to match\n   * @param  {string} [state] - the state to which transition; if not provided, will\n   *                            remain in the same state.\n   * @param  {boolean} [delimitsText] - `true` if the token is a text delimiter. A text delimiters\n   *                                    is a token which should be considered as a token, even if it\n   *                                    doesn't start the line.\n   * @return {Object} - returns the LexState itself for chaining.\n   */\n  addTransition(token, state, delimitsText) {\n    this.transitions.push({\n      token: token,\n      regex: Tokens[token],\n      state: state || null,\n      delimitsText: delimitsText || false,\n    });\n\n    return this; // Return this for chaining\n  }\n\n  /**\n   * addTextRule - Match all the way up to any of the other transitions in this state.\n   *               The text rule can only be added once.\n   *\n   * @param  {type} type  description\n   * @param  {type} state description\n   * @return {Object} - returns the LexState itself for chaining.\n   */\n  addTextRule(type, state) {\n    if (this.textRule) {\n      throw new Error('Cannot add more than one text rule to a state.');\n    }\n\n    // Go through the regex of the other transitions in this state, and create a regex that will\n    // match all text, up to any of those transitions.\n    const rules = [];\n    this.transitions.forEach((transition) => {\n      if (transition.delimitsText) {\n        // Surround the rule in parens\n        rules.push(`(${transition.regex.source})`);\n      }\n    });\n\n    // Join the rules that we got above on a |, then put them all into a negative lookahead.\n    const textPattern = `((?!${rules.join('|')}).)+`;\n    this.addTransition(type, state);\n\n    // Update the regex in the transition we just added to our new one.\n    this.textRule = this.transitions[this.transitions.length - 1];\n    this.textRule.regex = new RegExp(textPattern);\n\n    return this;\n  }\n\n  /**\n   * setTrackNextIndentation - tell this state whether to track indentation.\n   *\n   * @param  {boolean} track - `true` to track, `false` otherwise.\n   * @return {Object} - returns the LexState itself for chaining.\n   */\n  setTrackNextIndentation(track) {\n    this.isTrackingNextIndentation = track;\n    return this;\n  }\n}\n\nexport default LexerState;\n", "// @ts-nocheck\n'use strict';\n\nimport LexerState from './lexer-state';\n\n/**\n * @return {Object}  all states in which the lexer can be with their associated transitions.\n */\nfunction makeStates() {\n  return {\n    base: new LexerState()\n      .addTransition('EscapedCharacter', null, true)\n      .addTransition('Comment', null, true)\n      .addTransition('Hashtag', null, true)\n      .addTransition('BeginCommand', 'command', true)\n      .addTransition('BeginInlineExp', 'inlineExpression', true)\n      .addTransition('ShortcutOption', 'shortcutOption')\n      .addTextRule('Text'),\n\n    shortcutOption: new LexerState()\n      .setTrackNextIndentation(true)\n      .addTransition('EscapedCharacter', null, true)\n      .addTransition('Comment', null, true)\n      .addTransition('Hashtag', null, true)\n      .addTransition('BeginCommand', 'expression', true)\n      .addTransition('BeginInlineExp', 'inlineExpressionInShortcut', true)\n      .addTextRule('Text', 'base'),\n\n    command: new LexerState()\n      .addTransition('If', 'expression')\n      .addTransition('Else')\n      .addTransition('ElseIf', 'expression')\n      .addTransition('EndIf')\n      .addTransition('Set', 'assignment')\n      .addTransition('Declare', 'declare')\n      .addTransition('Jump', 'jump')\n      .addTransition('Stop', 'stop')\n      .addTransition('BeginInlineExp', 'inlineExpressionInCommand', true)\n      .addTransition('EndCommand', 'base', true)\n      .addTextRule('Text'),\n\n    commandArg: new LexerState().addTextRule('Text'),\n\n    commandParenArgOrExpression: new LexerState()\n      .addTransition('EndCommand', 'base', true)\n      .addTransition('LeftParen', 'expression')\n      .addTransition('Variable', 'expression')\n      .addTransition('Number', 'expression')\n      .addTransition('String')\n      .addTransition('True')\n      .addTransition('False')\n      .addTransition('Null')\n      .addTransition('RightParen'),\n\n    assignment: new LexerState().addTransition('Variable').addTransition('EqualToOrAssign', 'expression'),\n\n    declare: new LexerState()\n      .addTransition('Variable')\n      .addTransition('EndCommand', 'base')\n      .addTransition('EqualToOrAssign', 'expression'),\n\n    jump: new LexerState()\n      .addTransition('Identifier')\n      .addTransition('BeginInlineExp', 'inlineExpressionInCommand', true)\n      .addTransition('EndCommand', 'base', true),\n\n    stop: new LexerState().addTransition('EndCommand', 'base', true),\n\n    expression: new LexerState()\n      .addTransition('As')\n      .addTransition('ExplicitType')\n      .addTransition('EndCommand', 'base')\n      .addTransition('Number')\n      .addTransition('String')\n      .addTransition('LeftParen')\n      .addTransition('RightParen')\n      .addTransition('EqualTo')\n      .addTransition('EqualToOrAssign')\n      .addTransition('NotEqualTo')\n      .addTransition('GreaterThanOrEqualTo')\n      .addTransition('GreaterThan')\n      .addTransition('LessThanOrEqualTo')\n      .addTransition('LessThan')\n      .addTransition('Add')\n      .addTransition('UnaryMinus')\n      .addTransition('Minus')\n      .addTransition('Exponent')\n      .addTransition('Multiply')\n      .addTransition('Divide')\n      .addTransition('Modulo')\n      .addTransition('And')\n      .addTransition('Or')\n      .addTransition('Xor')\n      .addTransition('Not')\n      .addTransition('Variable')\n      .addTransition('Comma')\n      .addTransition('True')\n      .addTransition('False')\n      .addTransition('Null')\n      .addTransition('Identifier')\n      .addTextRule(),\n\n    inlineExpression: new LexerState()\n      .addTransition('EndInlineExp', 'base')\n      .addTransition('Number')\n      .addTransition('String')\n      .addTransition('LeftParen')\n      .addTransition('RightParen')\n      .addTransition('EqualTo')\n      .addTransition('EqualToOrAssign')\n      .addTransition('NotEqualTo')\n      .addTransition('GreaterThanOrEqualTo')\n      .addTransition('GreaterThan')\n      .addTransition('LessThanOrEqualTo')\n      .addTransition('LessThan')\n      .addTransition('Add')\n      .addTransition('UnaryMinus')\n      .addTransition('Minus')\n      .addTransition('Exponent')\n      .addTransition('Multiply')\n      .addTransition('Divide')\n      .addTransition('Modulo')\n      .addTransition('And')\n      .addTransition('Or')\n      .addTransition('Xor')\n      .addTransition('Not')\n      .addTransition('Variable')\n      .addTransition('Comma')\n      .addTransition('True')\n      .addTransition('False')\n      .addTransition('Null')\n      .addTransition('Identifier')\n      .addTextRule('Text', 'base'),\n\n    // TODO: Copied from above\n    // There has to be a non-stupid way to do this, right?\n    // I'm just not familiar enough yet to know how to\n    // transition from inline expression back to base OR command\n    // states depending on how we got there\n    inlineExpressionInCommand: new LexerState()\n      .addTransition('EndInlineExp', 'command')\n      .addTransition('Number')\n      .addTransition('String')\n      .addTransition('LeftParen')\n      .addTransition('RightParen')\n      .addTransition('EqualTo')\n      .addTransition('EqualToOrAssign')\n      .addTransition('NotEqualTo')\n      .addTransition('GreaterThanOrEqualTo')\n      .addTransition('GreaterThan')\n      .addTransition('LessThanOrEqualTo')\n      .addTransition('LessThan')\n      .addTransition('Add')\n      .addTransition('UnaryMinus')\n      .addTransition('Minus')\n      .addTransition('Exponent')\n      .addTransition('Multiply')\n      .addTransition('Divide')\n      .addTransition('Modulo')\n      .addTransition('And')\n      .addTransition('Or')\n      .addTransition('Xor')\n      .addTransition('Not')\n      .addTransition('Variable')\n      .addTransition('Comma')\n      .addTransition('True')\n      .addTransition('False')\n      .addTransition('Null')\n      .addTransition('Identifier')\n      .addTextRule('Text', 'base'),\n\n    inlineExpressionInShortcut: new LexerState()\n      .addTransition('EndInlineExp', 'shortcutOption')\n      .addTransition('Number')\n      .addTransition('String')\n      .addTransition('LeftParen')\n      .addTransition('RightParen')\n      .addTransition('EqualTo')\n      .addTransition('EqualToOrAssign')\n      .addTransition('NotEqualTo')\n      .addTransition('GreaterThanOrEqualTo')\n      .addTransition('GreaterThan')\n      .addTransition('LessThanOrEqualTo')\n      .addTransition('LessThan')\n      .addTransition('Add')\n      .addTransition('UnaryMinus')\n      .addTransition('Minus')\n      .addTransition('Exponent')\n      .addTransition('Multiply')\n      .addTransition('Divide')\n      .addTransition('Modulo')\n      .addTransition('And')\n      .addTransition('Or')\n      .addTransition('Xor')\n      .addTransition('Not')\n      .addTransition('Variable')\n      .addTransition('Comma')\n      .addTransition('True')\n      .addTransition('False')\n      .addTransition('Null')\n      .addTransition('Identifier')\n      .addTextRule('Text', 'base'),\n  };\n}\n\nexport default {\n  makeStates: makeStates,\n};\n", "// @ts-nocheck\n'use strict';\n\n// Syncs with YarnSpinner@e0f6807,\n// see https://github.com/thesecretlab/YarnSpinner/blob/master/YarnSpinner/Lexer.cs\n\nimport StateMaker from './states';\n\n// As opposed to the original C# implemntation which, tokenize the entire input, before emiting\n// a list of tokens, this parser will emit a token each time `lex()` is called. This change\n// accomodates the Jison parser. Given the lexer is not entirely context-free\n// (Off-side rule, lookaheads), context needs to be remembered between each `lex()` calls.\nclass Lexer {\n  constructor() {\n    /** All the possible states for the lexer. */\n    this.states = StateMaker.makeStates();\n\n    /** Current state identifier. */\n    this.state = 'base';\n\n    /** Original text to lex. */\n    this.originalText = '';\n\n    /** Text to lex, splitted into an array of lines. */\n    this.lines = [];\n\n    // Properties used to keep track of the context we're in, while tokenizing each line.\n    /**\n     * Indentation tracker. Each time we encounter an identation, we push a\n     * new array which looks like: [indentationLevel, isBaseIndentation]. Basically,\n     * isBaseIndentation will be true only for the first level.\n     */\n    this.indentation = [[0, false]];\n\n    /**\n     * Set to true when a state required indentation tracking. Will be set to false, after a\n     * an indentation is found.\n     */\n    this.shouldTrackNextIndentation = false;\n\n    /**\n     * The previous level of identation, basically: this.indentation.last()[0].\n     */\n    this.previousLevelOfIndentation = 0;\n\n    // Reset the locations.\n    this.reset();\n  }\n\n  /**\n   * reset - Reset the lexer location, text and line number. Nothing fancy.\n   */\n  reset() {\n    // Locations, used by both the lexer and the Jison parser.\n    this.yytext = '';\n    this.yylloc = {\n      first_column: 1,\n      first_line: 1,\n      last_column: 1,\n      last_line: 1,\n    };\n    this.yylineno = 1;\n  }\n\n  /**\n   * lex - Lex the input and emit the next matched token.\n   *\n   * @return {string}  Emit the next token found.\n   */\n  lex() {\n    if (this.isAtTheEndOfText()) {\n      this.yytext = '';\n\n      // Now that we're at the end of the text, we'll emit as many\n      // `Dedent` as necessary, to get back to 0-indentation.\n      const indent = this.indentation.pop();\n      if (indent && indent[1]) {\n        return 'Dedent';\n      }\n\n      return 'EndOfInput';\n    }\n\n    if (this.isAtTheEndOfLine()) {\n      // Get the next token on the current line\n      this.advanceLine();\n      return 'EndOfLine';\n    }\n\n    return this.lexNextTokenOnCurrentLine();\n  }\n\n  advanceLine() {\n    this.yylineno += 1;\n    const currentLine = this.getCurrentLine().replace(/\\t/, '    ');\n    this.lines[this.yylineno - 1] = currentLine;\n    this.previousLevelOfIndentation = this.getLastRecordedIndentation()[0];\n    this.yytext = '';\n    this.yylloc = {\n      first_column: 1,\n      first_line: this.yylineno,\n      last_column: 1,\n      last_line: this.yylineno,\n    };\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  lexNextTokenOnCurrentLine() {\n    const thisIndentation = this.getCurrentLineIndentation();\n\n    if (this.shouldTrackNextIndentation && thisIndentation > this.previousLevelOfIndentation) {\n      this.indentation.push([thisIndentation, true]);\n      this.shouldTrackNextIndentation = false;\n\n      this.yylloc.first_column = this.yylloc.last_column;\n      this.yylloc.last_column += thisIndentation;\n      this.yytext = '';\n\n      return 'Indent';\n    } else if (thisIndentation < this.getLastRecordedIndentation()[0]) {\n      const indent = this.indentation.pop();\n      if (indent[1]) {\n        this.yytext = '';\n        this.previousLevelOfIndentation = this.getLastRecordedIndentation()[0];\n\n        return 'Dedent';\n      }\n\n      this.lexNextTokenOnCurrentLine();\n    }\n\n    if (thisIndentation === this.previousLevelOfIndentation && this.yylloc.last_column === 1) {\n      this.yylloc.last_column += thisIndentation;\n    }\n\n    const rules = this.getState().transitions;\n    for (let i = 0, len = rules.length; i < len; i += 1) {\n      const rule = rules[i];\n      const match = this.getCurrentLine()\n        .substring(this.yylloc.last_column - 1)\n        .match(rule.regex);\n\n      // Only accept valid matches that are at the beginning of the text\n      if (match !== null && match.index === 0) {\n        // Take the matched text off the front of this.text\n        const matchedText = match[0];\n\n        // Tell the parser what the text for this token is\n        this.yytext = this.getCurrentLine().substr(this.yylloc.last_column - 1, matchedText.length);\n\n        if (rule.token === 'String') {\n          // If that's a String, remove the quotes\n          this.yytext = this.yytext.substring(1, this.yytext.length - 1);\n        }\n\n        // Update our line and column info\n        this.yylloc.first_column = this.yylloc.last_column;\n        this.yylloc.last_column += matchedText.length;\n\n        // If the rule points to a new state, change it now\n        if (rule.state) {\n          this.setState(rule.state);\n\n          if (this.shouldTrackNextIndentation && this.getLastRecordedIndentation()[0] < thisIndentation) {\n            this.indentation.push([thisIndentation, false]);\n          }\n        }\n\n        const nextState = this.states[rule.state];\n        const nextStateHasText =\n          !rule.state ||\n          nextState.transitions.find((transition) => {\n            return transition.token === 'Text';\n          });\n        // inline expressions and escaped characters interrupt text\n        // but should still preserve surrounding whitespace.\n        if (\n          (rule.token !== 'EndInlineExp' && rule.token !== 'EscapedCharacter') ||\n          !nextStateHasText // we never want leading whitespace if not in text-supporting state\n        ) {\n          // Remove leading whitespace characters\n          const spaceMatch = this.getCurrentLine()\n            .substring(this.yylloc.last_column - 1)\n            .match(/^\\s*/);\n          if (spaceMatch[0]) {\n            this.yylloc.last_column += spaceMatch[0].length;\n          }\n        }\n\n        return rule.token;\n      }\n    }\n\n    throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`);\n  }\n\n  // /////////////// Getters & Setters\n\n  /**\n   * setState - set the current state of the lexer.\n   *\n   * @param  {string} state name of the state\n   */\n  setState(state) {\n    if (this.states[state] === undefined) {\n      throw new Error(`Cannot set the unknown state [${state}]`);\n    }\n\n    this.state = state;\n    if (this.getState().isTrackingNextIndentation) {\n      this.shouldTrackNextIndentation = true;\n    }\n  }\n\n  /**\n   * setInput - Set the text on which perform lexical analysis.\n   *\n   * @param  {string} text the text to lex.\n   */\n  setInput(text) {\n    // Delete carriage return while keeping a similar semantic.\n    this.originalText = text\n      .replace(/(\\r\\n)/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .replace(/[\\n\\r]+$/, '');\n    // Transform the input into an array of lines.\n    this.lines = this.originalText.split('\\n');\n    this.reset();\n  }\n\n  /**\n   * getState - Returns the full current state object (LexerState),\n   * rather than its identifier.\n   *\n   * @return {Object}  the state object.\n   */\n  getState() {\n    return this.states[this.state];\n  }\n\n  getCurrentLine() {\n    return this.lines[this.yylineno - 1];\n  }\n\n  getCurrentLineIndentation() {\n    const match = this.getCurrentLine().match(/^(\\s*)/g);\n    return match[0].length;\n  }\n\n  getLastRecordedIndentation() {\n    if (this.indentation.length === 0) {\n      return [0, false];\n    }\n\n    return this.indentation[this.indentation.length - 1];\n  }\n\n  // /////////////// Booleans tests\n  /**\n   * @return {boolean}  `true` when yylloc indicates that the end was reached.\n   */\n  isAtTheEndOfText() {\n    return this.isAtTheEndOfLine() && this.yylloc.first_line >= this.lines.length;\n  }\n\n  /**\n   * @return {boolean}  `true` when yylloc indicates that the end of the line was reached.\n   */\n  isAtTheEndOfLine() {\n    return this.yylloc.last_column > this.getCurrentLine().length;\n  }\n}\n\nexport default Lexer;\n", "// @ts-nocheck\n// eslint-disable-next-line @typescript-eslint/no-shadow\nvar o = function (k, v, o, l) {\n    for (o = o || {}, l = k.length; l--; o[k[l]] = v);\n    return o;\n  },\n  $V0 = [1, 16],\n  $V1 = [1, 17],\n  $V2 = [1, 12],\n  $V3 = [1, 19],\n  $V4 = [1, 18],\n  $V5 = [5, 18, 19, 23, 34, 36, 77],\n  $V6 = [1, 23],\n  $V7 = [1, 24],\n  $V8 = [1, 26],\n  $V9 = [1, 27],\n  $Va = [5, 14, 16, 18, 19, 21, 23, 34, 36, 77],\n  $Vb = [1, 30],\n  $Vc = [1, 34],\n  $Vd = [1, 35],\n  $Ve = [1, 36],\n  $Vf = [1, 37],\n  $Vg = [5, 14, 16, 18, 19, 21, 23, 26, 34, 36, 77],\n  $Vh = [1, 50],\n  $Vi = [1, 49],\n  $Vj = [1, 44],\n  $Vk = [1, 45],\n  $Vl = [1, 46],\n  $Vm = [1, 51],\n  $Vn = [1, 52],\n  $Vo = [1, 53],\n  $Vp = [1, 54],\n  $Vq = [1, 55],\n  $Vr = [5, 16, 18, 19, 23, 34, 36, 77],\n  $Vs = [1, 71],\n  $Vt = [1, 72],\n  $Vu = [1, 73],\n  $Vv = [1, 74],\n  $Vw = [1, 75],\n  $Vx = [1, 76],\n  $Vy = [1, 77],\n  $Vz = [1, 78],\n  $VA = [1, 79],\n  $VB = [1, 80],\n  $VC = [1, 81],\n  $VD = [1, 82],\n  $VE = [1, 83],\n  $VF = [1, 84],\n  $VG = [1, 85],\n  $VH = [26, 46, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78],\n  $VI = [26, 46, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78],\n  $VJ = [26, 46, 51, 70, 78],\n  $VK = [1, 122],\n  $VL = [1, 123],\n  $VM = [26, 46, 51, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78],\n  $VN = [26, 46, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78],\n  $VO = [51, 70],\n  $VP = [16, 18, 19, 23, 34, 77];\nvar parser = {\n  trace: function trace() {},\n  yy: {},\n  symbols_: {\n    error: 2,\n    node: 3,\n    statements: 4,\n    EndOfInput: 5,\n    conditionalBlock: 6,\n    statement: 7,\n    text: 8,\n    shortcut: 9,\n    genericCommand: 10,\n    assignmentCommand: 11,\n    jumpCommand: 12,\n    stopCommand: 13,\n    Comment: 14,\n    hashtags: 15,\n    EndOfLine: 16,\n    textNode: 17,\n    Text: 18,\n    EscapedCharacter: 19,\n    inlineExpression: 20,\n    Hashtag: 21,\n    conditional: 22,\n    BeginCommand: 23,\n    If: 24,\n    expression: 25,\n    EndCommand: 26,\n    EndIf: 27,\n    additionalConditionalBlocks: 28,\n    else: 29,\n    Else: 30,\n    elseif: 31,\n    ElseIf: 32,\n    shortcutOption: 33,\n    ShortcutOption: 34,\n    Indent: 35,\n    Dedent: 36,\n    Jump: 37,\n    Identifier: 38,\n    Stop: 39,\n    setCommandInner: 40,\n    declareCommandInner: 41,\n    Set: 42,\n    Variable: 43,\n    EqualToOrAssign: 44,\n    Declare: 45,\n    As: 46,\n    ExplicitType: 47,\n    functionArgument: 48,\n    functionCall: 49,\n    LeftParen: 50,\n    RightParen: 51,\n    UnaryMinus: 52,\n    Add: 53,\n    Minus: 54,\n    Exponent: 55,\n    Multiply: 56,\n    Divide: 57,\n    Modulo: 58,\n    Not: 59,\n    Or: 60,\n    And: 61,\n    Xor: 62,\n    EqualTo: 63,\n    NotEqualTo: 64,\n    GreaterThan: 65,\n    GreaterThanOrEqualTo: 66,\n    LessThan: 67,\n    LessThanOrEqualTo: 68,\n    parenExpressionArgs: 69,\n    Comma: 70,\n    literal: 71,\n    True: 72,\n    False: 73,\n    Number: 74,\n    String: 75,\n    Null: 76,\n    BeginInlineExp: 77,\n    EndInlineExp: 78,\n    $accept: 0,\n    $end: 1,\n  },\n  terminals_: {\n    2: 'error',\n    5: 'EndOfInput',\n    14: 'Comment',\n    16: 'EndOfLine',\n    18: 'Text',\n    19: 'EscapedCharacter',\n    21: 'Hashtag',\n    23: 'BeginCommand',\n    24: 'If',\n    26: 'EndCommand',\n    27: 'EndIf',\n    30: 'Else',\n    32: 'ElseIf',\n    34: 'ShortcutOption',\n    35: 'Indent',\n    36: 'Dedent',\n    37: 'Jump',\n    38: 'Identifier',\n    39: 'Stop',\n    42: 'Set',\n    43: 'Variable',\n    44: 'EqualToOrAssign',\n    45: 'Declare',\n    46: 'As',\n    47: 'ExplicitType',\n    50: 'LeftParen',\n    51: 'RightParen',\n    52: 'UnaryMinus',\n    53: 'Add',\n    54: 'Minus',\n    55: 'Exponent',\n    56: 'Multiply',\n    57: 'Divide',\n    58: 'Modulo',\n    59: 'Not',\n    60: 'Or',\n    61: 'And',\n    62: 'Xor',\n    63: 'EqualTo',\n    64: 'NotEqualTo',\n    65: 'GreaterThan',\n    66: 'GreaterThanOrEqualTo',\n    67: 'LessThan',\n    68: 'LessThanOrEqualTo',\n    70: 'Comma',\n    72: 'True',\n    73: 'False',\n    74: 'Number',\n    75: 'String',\n    76: 'Null',\n    77: 'BeginInlineExp',\n    78: 'EndInlineExp',\n  },\n  productions_: [\n    0,\n    [3, 2],\n    [4, 1],\n    [4, 2],\n    [4, 1],\n    [4, 2],\n    [7, 1],\n    [7, 1],\n    [7, 1],\n    [7, 1],\n    [7, 1],\n    [7, 1],\n    [7, 2],\n    [7, 2],\n    [7, 2],\n    [17, 1],\n    [17, 1],\n    [8, 1],\n    [8, 1],\n    [8, 2],\n    [15, 1],\n    [15, 2],\n    [22, 4],\n    [6, 6],\n    [6, 4],\n    [6, 2],\n    [29, 3],\n    [29, 2],\n    [31, 4],\n    [31, 2],\n    [28, 5],\n    [28, 5],\n    [28, 3],\n    [33, 2],\n    [33, 3],\n    [33, 2],\n    [33, 2],\n    [33, 3],\n    [33, 2],\n    [9, 1],\n    [9, 5],\n    [10, 3],\n    [12, 4],\n    [12, 4],\n    [13, 3],\n    [11, 3],\n    [11, 3],\n    [40, 4],\n    [41, 4],\n    [41, 6],\n    [25, 1],\n    [25, 1],\n    [25, 3],\n    [25, 2],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 2],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [25, 3],\n    [49, 3],\n    [49, 4],\n    [69, 3],\n    [69, 1],\n    [48, 1],\n    [48, 1],\n    [48, 1],\n    [71, 1],\n    [71, 1],\n    [71, 1],\n    [71, 1],\n    [71, 1],\n    [20, 3],\n  ],\n  performAction: function anonymous(\n    yytext,\n    yyleng,\n    yylineno,\n    yy,\n    yystate /* action[1] */,\n    $$ /* vstack */,\n    _$ /* lstack */,\n  ) {\n    /* this == yyval */\n\n    var $0 = $$.length - 1;\n    // eslint-disable-next-line sonarjs/max-switch-cases\n    switch (yystate) {\n      case 1:\n        return $$[$0 - 1].flat();\n        break;\n      case 2:\n      case 4:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 17:\n      case 18:\n      case 73:\n        this.$ = [$$[$0]];\n        break;\n      case 3:\n        this.$ = $$[$0 - 1].concat($$[$0]);\n        break;\n      case 5:\n        this.$ = $$[$0 - 1].concat([$$[$0]]);\n        break;\n      case 6:\n      case 51:\n        this.$ = $$[$0];\n        break;\n      case 12:\n      case 14:\n      case 25:\n      case 28:\n      case 29:\n      case 45:\n      case 52:\n        this.$ = $$[$0 - 1];\n        break;\n      case 13:\n        this.$ = $$[$0 - 1].map((s) => Object.assign(s, { hashtags: $$[$0] }));\n        break;\n      case 15:\n        this.$ = new yy.TextNode($$[$0], this._$);\n        break;\n      case 16:\n        this.$ = new yy.EscapedCharacterNode($$[$0], this._$);\n        break;\n      case 19:\n        this.$ = $$[$0 - 1].concat($$[$0]);\n        break;\n      case 20:\n        this.$ = [$$[$0].substring(1)];\n        break;\n      case 21:\n        this.$ = [$$[$0 - 1].substring(1)].concat($$[$0]);\n        break;\n      case 22:\n      case 36:\n      case 38:\n        this.$ = $$[$0 - 1];\n        break;\n      case 23:\n        this.$ = new yy.IfNode($$[$0 - 5], $$[$0 - 3].flat());\n        break;\n      case 24:\n        this.$ = new yy.IfElseNode($$[$0 - 3], $$[$0 - 1].flat(), $$[$0]);\n        break;\n      case 26:\n      case 27:\n        this.$ = undefined;\n        break;\n      case 30:\n        this.$ = new yy.ElseNode($$[$0 - 3].flat());\n        break;\n      case 31:\n        this.$ = new yy.ElseIfNode($$[$0 - 4], $$[$0 - 3].flat());\n        break;\n      case 32:\n        this.$ = new yy.ElseIfNode($$[$0 - 2], $$[$0 - 1].flat(), $$[$0]);\n        break;\n      case 33:\n        this.$ = { text: $$[$0] };\n        break;\n      case 34:\n        this.$ = { text: $$[$0 - 1], conditional: $$[$0] };\n        break;\n      case 35:\n        this.$ = { ...$$[$0 - 1], hashtags: $$[$0] };\n        break;\n      case 37:\n        this.$ = { ...$$[$0 - 2], hashtags: $$[$0 - 1] };\n        break;\n      case 39:\n        this.$ = new yy.DialogShortcutNode($$[$0].text, undefined, this._$, $$[$0].hashtags, $$[$0].conditional);\n        break;\n      case 40:\n        this.$ = new yy.DialogShortcutNode(\n          $$[$0 - 4].text,\n          $$[$0 - 1].flat(),\n          this._$,\n          $$[$0 - 4].hashtags,\n          $$[$0 - 4].conditional,\n        );\n        break;\n      case 41:\n        this.$ = new yy.GenericCommandNode($$[$0 - 1], this._$);\n        break;\n      case 42:\n      case 43:\n        this.$ = new yy.JumpCommandNode($$[$0 - 1]);\n        break;\n      case 44:\n        this.$ = new yy.StopCommandNode();\n        break;\n      case 46:\n        this.$ = null;\n        break;\n      case 47:\n        this.$ = new yy.SetVariableEqualToNode($$[$0 - 2].substring(1), $$[$0]);\n        break;\n      case 48:\n        this.$ = null;\n        yy.registerDeclaration($$[$0 - 2].substring(1), $$[$0]);\n        break;\n      case 49:\n        this.$ = null;\n        yy.registerDeclaration($$[$0 - 4].substring(1), $$[$0 - 2], $$[$0]);\n        break;\n      case 50:\n      case 74:\n      case 75:\n        this.$ = $$[$0];\n        break;\n      case 53:\n        this.$ = new yy.UnaryMinusExpressionNode($$[$0]);\n        break;\n      case 54:\n        this.$ = new yy.ArithmeticExpressionAddNode($$[$0 - 2], $$[$0]);\n        break;\n      case 55:\n        this.$ = new yy.ArithmeticExpressionMinusNode($$[$0 - 2], $$[$0]);\n        break;\n      case 56:\n        this.$ = new yy.ArithmeticExpressionExponentNode($$[$0 - 2], $$[$0]);\n        break;\n      case 57:\n        this.$ = new yy.ArithmeticExpressionMultiplyNode($$[$0 - 2], $$[$0]);\n        break;\n      case 58:\n        this.$ = new yy.ArithmeticExpressionDivideNode($$[$0 - 2], $$[$0]);\n        break;\n      case 59:\n        this.$ = new yy.ArithmeticExpressionModuloNode($$[$0 - 2], $$[$0]);\n        break;\n      case 60:\n        this.$ = new yy.NegatedBooleanExpressionNode($$[$0]);\n        break;\n      case 61:\n        this.$ = new yy.BooleanOrExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 62:\n        this.$ = new yy.BooleanAndExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 63:\n        this.$ = new yy.BooleanXorExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 64:\n        this.$ = new yy.EqualToExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 65:\n        this.$ = new yy.NotEqualToExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 66:\n        this.$ = new yy.GreaterThanExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 67:\n        this.$ = new yy.GreaterThanOrEqualToExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 68:\n        this.$ = new yy.LessThanExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 69:\n        this.$ = new yy.LessThanOrEqualToExpressionNode($$[$0 - 2], $$[$0]);\n        break;\n      case 70:\n        this.$ = new yy.FunctionCallNode($$[$0 - 2], [], this._$);\n        break;\n      case 71:\n        this.$ = new yy.FunctionCallNode($$[$0 - 3], $$[$0 - 1], this._$);\n        break;\n      case 72:\n        this.$ = $$[$0 - 2].concat([$$[$0]]);\n        break;\n      case 76:\n        this.$ = new yy.VariableNode($$[$0].substring(1));\n        break;\n      case 77:\n      case 78:\n        this.$ = new yy.BooleanLiteralNode($$[$0]);\n        break;\n      case 79:\n        this.$ = new yy.NumericLiteralNode($$[$0]);\n        break;\n      case 80:\n        this.$ = new yy.StringLiteralNode($$[$0]);\n        break;\n      case 81:\n        this.$ = new yy.NullLiteralNode($$[$0]);\n        break;\n      case 82:\n        this.$ = new yy.InlineExpressionNode($$[$0 - 1], this._$);\n        break;\n    }\n  },\n  table: [\n    {\n      3: 1,\n      4: 2,\n      6: 3,\n      7: 4,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    { 1: [3] },\n    {\n      5: [1, 20],\n      6: 21,\n      7: 22,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o($V5, [2, 2], { 16: $V6 }),\n    o($V5, [2, 4], { 15: 25, 14: $V7, 16: $V8, 21: $V9 }),\n    { 16: [1, 28] },\n    o([5, 14, 16, 21, 23, 34, 36], [2, 6], { 17: 13, 20: 14, 8: 29, 18: $V0, 19: $V1, 77: $V4 }),\n    o($Va, [2, 7]),\n    o($Va, [2, 8]),\n    o($Va, [2, 9]),\n    o($Va, [2, 10]),\n    o($Va, [2, 11]),\n    { 8: 31, 17: 13, 18: $V0, 19: $V1, 20: 14, 24: $Vb, 37: $Vc, 39: $Vd, 40: 32, 41: 33, 42: $Ve, 45: $Vf, 77: $V4 },\n    o($Vg, [2, 17]),\n    o($Vg, [2, 18]),\n    o($V5, [2, 39], { 15: 39, 14: [1, 40], 16: [1, 38], 21: $V9 }),\n    o($Vg, [2, 15]),\n    o($Vg, [2, 16]),\n    {\n      20: 47,\n      25: 41,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    { 8: 56, 17: 13, 18: $V0, 19: $V1, 20: 14, 77: $V4 },\n    { 1: [2, 1] },\n    o($V5, [2, 3], { 16: $V6 }),\n    o($V5, [2, 5], { 15: 25, 14: $V7, 16: $V8, 21: $V9 }),\n    o($Vr, [2, 25]),\n    o($Va, [2, 12]),\n    o($Va, [2, 13]),\n    o($Va, [2, 14]),\n    o([5, 14, 16, 18, 19, 23, 34, 36, 77], [2, 20], { 15: 57, 21: $V9 }),\n    {\n      4: 58,\n      6: 3,\n      7: 4,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o([5, 14, 16, 21, 23, 26, 34, 36], [2, 19], { 17: 13, 20: 14, 8: 29, 18: $V0, 19: $V1, 77: $V4 }),\n    {\n      20: 47,\n      25: 59,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    { 8: 29, 17: 13, 18: $V0, 19: $V1, 20: 14, 26: [1, 60], 77: $V4 },\n    { 26: [1, 61] },\n    { 26: [1, 62] },\n    { 20: 64, 38: [1, 63], 77: $V4 },\n    { 26: [1, 65] },\n    { 43: [1, 66] },\n    { 43: [1, 67] },\n    o($Va, [2, 38], { 35: [1, 68] }),\n    o([5, 16, 18, 19, 21, 23, 34, 36, 77], [2, 35], { 14: [1, 69] }),\n    o($Va, [2, 36]),\n    {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n      78: [1, 70],\n    },\n    o($VH, [2, 50]),\n    o($VH, [2, 51]),\n    {\n      20: 47,\n      25: 86,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 87,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 88,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    o($VH, [2, 74]),\n    o($VH, [2, 75]),\n    o($VH, [2, 76]),\n    { 50: [1, 89] },\n    o($VH, [2, 77]),\n    o($VH, [2, 78]),\n    o($VH, [2, 79]),\n    o($VH, [2, 80]),\n    o($VH, [2, 81]),\n    o([5, 14, 16, 21, 34, 36], [2, 33], { 17: 13, 20: 14, 8: 29, 22: 90, 18: $V0, 19: $V1, 23: [1, 91], 77: $V4 }),\n    o($Va, [2, 21]),\n    {\n      6: 21,\n      7: 22,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: [1, 92],\n      28: 93,\n      29: 94,\n      31: 95,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    {\n      26: [1, 96],\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    },\n    o($Va, [2, 41]),\n    o($Va, [2, 45]),\n    o($Va, [2, 46]),\n    { 26: [1, 97] },\n    { 26: [1, 98] },\n    o($Va, [2, 44]),\n    { 44: [1, 99] },\n    { 44: [1, 100] },\n    {\n      4: 101,\n      6: 3,\n      7: 4,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o($Va, [2, 37]),\n    o(\n      [\n        5, 14, 16, 18, 19, 21, 23, 26, 34, 36, 46, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70,\n        77, 78,\n      ],\n      [2, 82],\n    ),\n    {\n      20: 47,\n      25: 102,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 103,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 104,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 105,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 106,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 107,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 108,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 109,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 110,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 111,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 112,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 113,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 114,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 115,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 116,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      51: [1, 117],\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    },\n    o($VI, [2, 53], { 58: $Vx }),\n    o($VJ, [2, 60], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    {\n      20: 47,\n      25: 120,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      51: [1, 118],\n      52: $Vk,\n      59: $Vl,\n      69: 119,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    o($Va, [2, 34]),\n    { 24: $Vb },\n    {\n      8: 31,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      24: $Vb,\n      27: [1, 121],\n      30: $VK,\n      32: $VL,\n      37: $Vc,\n      39: $Vd,\n      40: 32,\n      41: 33,\n      42: $Ve,\n      45: $Vf,\n      77: $V4,\n    },\n    o($Vr, [2, 24]),\n    {\n      4: 124,\n      6: 3,\n      7: 4,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      16: [1, 125],\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    {\n      4: 126,\n      6: 3,\n      7: 4,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      16: [1, 127],\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o($Va, [2, 22]),\n    o($Va, [2, 42]),\n    o($Va, [2, 43]),\n    {\n      20: 47,\n      25: 128,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      20: 47,\n      25: 129,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      6: 21,\n      7: 22,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: $V2,\n      33: 15,\n      34: $V3,\n      36: [1, 130],\n      77: $V4,\n    },\n    o($VM, [2, 54], { 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VM, [2, 55], { 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VI, [2, 56], { 58: $Vx }),\n    o($VI, [2, 57], { 58: $Vx }),\n    o($VI, [2, 58], { 58: $Vx }),\n    o($VJ, [2, 59], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    o([26, 46, 51, 60, 70, 78], [2, 61], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    o([26, 46, 51, 60, 61, 70, 78], [2, 62], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    o([26, 46, 51, 60, 61, 62, 70, 78], [2, 63], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    o($VN, [2, 64], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VN, [2, 65], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VN, [2, 66], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VN, [2, 67], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VN, [2, 68], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VN, [2, 69], { 53: $Vs, 54: $Vt, 55: $Vu, 56: $Vv, 57: $Vw, 58: $Vx }),\n    o($VH, [2, 52]),\n    o($VH, [2, 70]),\n    { 51: [1, 131], 70: [1, 132] },\n    o($VO, [2, 73], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    { 26: [1, 133] },\n    { 26: [1, 134] },\n    {\n      20: 47,\n      25: 135,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    {\n      6: 21,\n      7: 22,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: [1, 136],\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o($VP, [2, 27]),\n    {\n      6: 21,\n      7: 22,\n      8: 6,\n      9: 7,\n      10: 8,\n      11: 9,\n      12: 10,\n      13: 11,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      22: 5,\n      23: [1, 137],\n      28: 138,\n      29: 94,\n      31: 95,\n      33: 15,\n      34: $V3,\n      77: $V4,\n    },\n    o($VP, [2, 29]),\n    {\n      26: [2, 47],\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    },\n    {\n      26: [2, 48],\n      46: [1, 139],\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    },\n    o($Va, [2, 40]),\n    o($VH, [2, 71]),\n    {\n      20: 47,\n      25: 140,\n      38: $Vh,\n      43: $Vi,\n      48: 42,\n      49: 43,\n      50: $Vj,\n      52: $Vk,\n      59: $Vl,\n      71: 48,\n      72: $Vm,\n      73: $Vn,\n      74: $Vo,\n      75: $Vp,\n      76: $Vq,\n      77: $V4,\n    },\n    o($Vr, [2, 23]),\n    o($VP, [2, 26]),\n    {\n      26: [1, 141],\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    },\n    {\n      8: 31,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      24: $Vb,\n      27: [1, 142],\n      37: $Vc,\n      39: $Vd,\n      40: 32,\n      41: 33,\n      42: $Ve,\n      45: $Vf,\n      77: $V4,\n    },\n    {\n      8: 31,\n      17: 13,\n      18: $V0,\n      19: $V1,\n      20: 14,\n      24: $Vb,\n      27: [1, 143],\n      30: $VK,\n      32: $VL,\n      37: $Vc,\n      39: $Vd,\n      40: 32,\n      41: 33,\n      42: $Ve,\n      45: $Vf,\n      77: $V4,\n    },\n    o($Vr, [2, 32]),\n    { 47: [1, 144] },\n    o($VO, [2, 72], {\n      53: $Vs,\n      54: $Vt,\n      55: $Vu,\n      56: $Vv,\n      57: $Vw,\n      58: $Vx,\n      60: $Vy,\n      61: $Vz,\n      62: $VA,\n      63: $VB,\n      64: $VC,\n      65: $VD,\n      66: $VE,\n      67: $VF,\n      68: $VG,\n    }),\n    o($VP, [2, 28]),\n    { 26: [1, 145] },\n    { 26: [1, 146] },\n    { 26: [2, 49] },\n    o($Vr, [2, 30]),\n    o($Vr, [2, 31]),\n  ],\n  defaultActions: { 20: [2, 1], 144: [2, 49] },\n  parseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n      this.trace(str);\n    } else {\n      var error = new Error(str);\n      error.hash = hash;\n      throw error;\n    }\n  },\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  parse: function parse(input) {\n    var self = this,\n      stack = [0],\n      tstack = [],\n      vstack = [null],\n      lstack = [],\n      table = this.table,\n      yytext = '',\n      yylineno = 0,\n      yyleng = 0,\n      recovering = 0,\n      TERROR = 2,\n      EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n      lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n      this.parseError = sharedState.yy.parseError;\n    } else {\n      this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n      stack.length = stack.length - 2 * n;\n      vstack.length = vstack.length - n;\n      lstack.length = lstack.length - n;\n    }\n    _token_stack: var lex = function () {\n      var token;\n      token = lexer.lex() || EOF;\n      if (typeof token !== 'number') {\n        token = self.symbols_[token] || token;\n      }\n      return token;\n    };\n    var symbol,\n      preErrorSymbol,\n      state,\n      action,\n      a,\n      r,\n      yyval = {},\n      p,\n      len,\n      newState,\n      expected;\n    while (true) {\n      state = stack[stack.length - 1];\n      if (this.defaultActions[state]) {\n        action = this.defaultActions[state];\n      } else {\n        if (symbol === null || typeof symbol == 'undefined') {\n          symbol = lex();\n        }\n        action = table[state] && table[state][symbol];\n      }\n      if (typeof action === 'undefined' || !action.length || !action[0]) {\n        var errStr = '';\n        expected = [];\n        for (p in table[state]) {\n          if (this.terminals_[p] && p > TERROR) {\n            expected.push(\"'\" + this.terminals_[p] + \"'\");\n          }\n        }\n        if (lexer.showPosition) {\n          errStr =\n            'Parse error on line ' +\n            (yylineno + 1) +\n            ':\\n' +\n            lexer.showPosition() +\n            '\\nExpecting ' +\n            expected.join(', ') +\n            \", got '\" +\n            (this.terminals_[symbol] || symbol) +\n            \"'\";\n        } else {\n          errStr =\n            'Parse error on line ' +\n            (yylineno + 1) +\n            ': Unexpected ' +\n            (symbol == EOF ? 'end of input' : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n        }\n        this.parseError(errStr, {\n          text: lexer.match,\n          token: this.terminals_[symbol] || symbol,\n          line: lexer.yylineno,\n          loc: yyloc,\n          expected: expected,\n        });\n      }\n      if (action[0] instanceof Array && action.length > 1) {\n        throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n      }\n      switch (action[0]) {\n        case 1:\n          stack.push(symbol);\n          vstack.push(lexer.yytext);\n          lstack.push(lexer.yylloc);\n          stack.push(action[1]);\n          symbol = null;\n          if (!preErrorSymbol) {\n            yyleng = lexer.yyleng;\n            yytext = lexer.yytext;\n            yylineno = lexer.yylineno;\n            yyloc = lexer.yylloc;\n            if (recovering > 0) {\n              recovering--;\n            }\n          } else {\n            symbol = preErrorSymbol;\n            preErrorSymbol = null;\n          }\n          break;\n        case 2:\n          len = this.productions_[action[1]][1];\n          yyval.$ = vstack[vstack.length - len];\n          yyval._$ = {\n            first_line: lstack[lstack.length - (len || 1)].first_line,\n            last_line: lstack[lstack.length - 1].last_line,\n            first_column: lstack[lstack.length - (len || 1)].first_column,\n            last_column: lstack[lstack.length - 1].last_column,\n          };\n          if (ranges) {\n            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n          }\n          r = this.performAction.apply(\n            yyval,\n            [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args),\n          );\n          if (typeof r !== 'undefined') {\n            return r;\n          }\n          if (len) {\n            stack = stack.slice(0, -1 * len * 2);\n            vstack = vstack.slice(0, -1 * len);\n            lstack = lstack.slice(0, -1 * len);\n          }\n          stack.push(this.productions_[action[1]][0]);\n          vstack.push(yyval.$);\n          lstack.push(yyval._$);\n          newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n          stack.push(newState);\n          break;\n        case 3:\n          return true;\n      }\n    }\n    return true;\n  },\n};\n\nfunction Parser() {\n  this.yy = {};\n}\nParser.prototype = parser;\nparser.Parser = Parser;\nexport { parser, Parser };\n", "// @ts-nocheck\n'use strict';\n\nimport Lexer from '../lexer/lexer';\nimport { parser } from './compiled-parser';\nimport Nodes from './nodes';\n\nparser.lexer = new Lexer();\nparser.yy = Nodes;\nparser.yy.declarations = {};\nparser.yy.parseError = function parseError(e) {\n  throw e;\n};\nparser.yy.registerDeclaration = function registerDeclaration(variableName, expression, explicitType) {\n  if (!this.areDeclarationsHandled) {\n    if (this.declarations[variableName]) {\n      throw new Error(`Duplicate declaration found for variable: ${variableName}`);\n    }\n    this.declarations[variableName] = {\n      variableName,\n      expression,\n      explicitType,\n    };\n  }\n};\n\nexport default parser;\n", "// @ts-nocheck\n\nimport convertYarn from './convert-yarn-to-js';\nimport DefaultVariableStorage from './default-variable-storage';\nimport types from './parser/nodes';\nimport parser from './parser/parser';\nimport * as results from './results';\n\nconst nodeTypes = types.types;\n\nexport class Runner {\n  private readonly noEscape: boolean;\n  private readonly yarnNodes: {};\n  private variables: DefaultVariableStorage;\n  private readonly functions: {};\n  constructor() {\n    this.noEscape = false;\n    this.yarnNodes = {};\n    this.variables = new DefaultVariableStorage();\n    this.functions = {};\n  }\n\n  /**\n   * Loads the yarn node data into this.nodes\n   * @param dialogue {any[]} yarn dialogue as string or array\n   */\n  load(dialogue: string) {\n    if (!dialogue) {\n      throw new Error('No dialogue supplied');\n    }\n    let nodes: Array<{ title: string; body: string }>;\n    if (typeof dialogue === 'string') {\n      // @ts-ignore\n      nodes = convertYarn(dialogue);\n    } else {\n      nodes = dialogue;\n    }\n\n    nodes.forEach((node) => {\n      if (!node.title) {\n        throw new Error(`Node needs a title: ${JSON.stringify(node)}`);\n      } else if (node.title.split('.').length > 1) {\n        throw new Error(`Node title cannot contain a dot: ${node.title}`);\n      }\n      if (!node.body) {\n        throw new Error(`Node needs a body: ${JSON.stringify(node)}`);\n      }\n      if (this.yarnNodes[node.title]) {\n        throw new Error(`Duplicate node title: ${node.title}`);\n      }\n      this.yarnNodes[node.title] = node;\n    });\n\n    parser.yy.areDeclarationsHandled = false;\n    parser.yy.declarations = {};\n    this.handleDeclarations(nodes);\n    parser.yy.areDeclarationsHandled = true;\n  }\n\n  /**\n   * Set a new variable storage object\n   * This must simply contain a 'get(name)' and 'set(name, value)' function\n   *\n   * Calling this function will clear any existing variable's values\n   */\n  setVariableStorage(storage) {\n    if (typeof storage.set !== 'function' || typeof storage.get !== 'function') {\n      throw new Error('Variable Storage object must contain both a \"set\" and \"get\" function');\n    }\n\n    this.variables = storage;\n  }\n\n  /**\n   * Scans for <<declare>> commands and sets initial variable values\n   * @param {any[]} yarn dialogue as string or array\n   */\n  handleDeclarations(nodes) {\n    const exampleValues = {\n      Number: 0,\n      String: '',\n      Boolean: false,\n    };\n\n    const allLines = nodes.reduce((acc, node) => {\n      const nodeLines = node.body.split(/\\r?\\n+/);\n      return [...acc, ...nodeLines];\n    }, []);\n\n    const declareLines = allLines.reduce((acc, line) => {\n      const match = line.match(/^<<declare .+>>/);\n      return match ? [...acc, line] : acc;\n    }, []);\n    if (declareLines.length) {\n      parser.parse(declareLines.join('\\n'));\n    }\n\n    Object.entries(parser.yy.declarations).forEach(([variableName, { expression, explicitType }]) => {\n      const value = this.evaluateExpressionOrLiteral(expression);\n\n      if (explicitType && typeof value !== typeof exampleValues[explicitType]) {\n        throw new Error(`Cannot declare value ${value} as type ${explicitType} for variable ${variableName}`);\n      }\n\n      if (!this.variables.get(variableName)) {\n        this.variables.set(variableName, value);\n      }\n    });\n  }\n\n  registerFunction(name: string, func) {\n    if (typeof func !== 'function') {\n      throw new Error('Registered function must be...well...a function');\n    }\n\n    this.functions[name] = func;\n  }\n\n  /**\n   * Generator to return each sequential dialog result starting from the given node\n   * @param {string} [startNode] - The name of the yarn node to begin at\n   */\n  *run(startNode) {\n    let jumpTo = startNode;\n    while (jumpTo) {\n      const yarnNode = this.yarnNodes[jumpTo];\n      if (yarnNode === undefined) {\n        throw new Error(`Node \"${startNode}\" does not exist`);\n      }\n\n      // Parse the entire node\n      const parserNodes = Array.from(parser.parse(yarnNode.body));\n      const metadata = { ...yarnNode };\n      delete metadata.body;\n      const result = yield* this.evalNodes(parserNodes, metadata);\n      jumpTo = result && result.jump;\n    }\n  }\n\n  /**\n   * Evaluate a list of parser nodes, yielding the ones that need to be seen by\n   * the user. Calls itself recursively if that is required by nested nodes\n   * @param {Node[]} nodes\n   * @param {YarnNode[]} metadata\n   */\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  *evalNodes(nodes, metadata) {\n    let shortcutNodes = [];\n    let textRun = '';\n\n    const filteredNodes = nodes.filter(Boolean);\n\n    // Yield the individual user-visible results\n    // Need to accumulate all adjacent selectables\n    // into one list (hence some of the weirdness here)\n    for (let nodeIdx = 0; nodeIdx < filteredNodes.length; nodeIdx += 1) {\n      const node = filteredNodes[nodeIdx];\n      const nextNode = filteredNodes[nodeIdx + 1];\n\n      // Text and the output of Inline Expressions\n      // are combined to deliver a TextNode.\n      if (node instanceof nodeTypes.Text || node instanceof nodeTypes.Expression) {\n        textRun += this.evaluateExpressionOrLiteral(node).toString();\n        if (\n          nextNode &&\n          node.lineNum === nextNode.lineNum &&\n          (nextNode instanceof nodeTypes.Text || nextNode instanceof nodeTypes.Expression)\n        ) {\n          // Same line, with another text equivalent to add to the\n          // text run further on in the loop, so don't yield.\n        } else {\n          yield new results.TextResult(textRun, node.hashtags, metadata);\n          textRun = '';\n        }\n      } else if (node instanceof nodeTypes.Shortcut) {\n        shortcutNodes.push(node);\n        if (!(nextNode instanceof nodeTypes.Shortcut)) {\n          // Last shortcut in the series, so yield the shortcuts.\n          const result = yield* this.handleShortcuts(shortcutNodes, metadata);\n          if (result && (result.stop || result.jump)) {\n            return result;\n          }\n          shortcutNodes = [];\n        }\n      } else if (node instanceof nodeTypes.Assignment) {\n        this.evaluateAssignment(node);\n      } else if (node instanceof nodeTypes.Conditional) {\n        // Get the results of the conditional\n        const evalResult = this.evaluateConditional(node);\n        if (evalResult) {\n          // Run the remaining results\n          const result = yield* this.evalNodes(evalResult, metadata);\n          if (result && (result.stop || result.jump)) {\n            return result;\n          }\n        }\n      } else if (node instanceof types.JumpCommandNode) {\n        // ignore the rest of this outer loop and\n        // tell parent loops to ignore following nodes.\n        // Recursive call here would cause stack overflow\n        return { jump: node.destination };\n      } else if (node instanceof types.StopCommandNode) {\n        // ignore the rest of this outer loop and\n        // tell parent loops to ignore following nodes\n        return { stop: true };\n      } else {\n        const command = this.evaluateExpressionOrLiteral(node.command);\n        yield new results.CommandResult(command, node.hashtags, metadata);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * yield a shortcut result then handle the subsequent selection\n   * @param {any[]} selections\n   */\n  *handleShortcuts(selections, metadata) {\n    // Multiple options to choose from (or just a single shortcut)\n    // Tag any conditional dialog options that result to false,\n    // the consuming app does the actual filtering or whatever\n    const transformedSelections = selections.map((s) => {\n      let isAvailable = true;\n\n      if (s.conditionalExpression && !this.evaluateExpressionOrLiteral(s.conditionalExpression)) {\n        isAvailable = false;\n      }\n\n      const text = this.evaluateExpressionOrLiteral(s.text);\n      return Object.assign(s, { isAvailable, text });\n    });\n\n    const optionsResult = new results.OptionsResult(transformedSelections, metadata);\n    yield optionsResult;\n    if (typeof optionsResult.selected === 'number') {\n      const selectedOption = transformedSelections[optionsResult.selected];\n      if (selectedOption.content) {\n        // Recursively go through the nodes nested within\n        return yield* this.evalNodes(selectedOption.content, metadata);\n      }\n    } else {\n      throw new Error('No option selected before resuming dialogue');\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Evaluates the given assignment node\n   */\n  evaluateAssignment(node) {\n    const result = this.evaluateExpressionOrLiteral(node.expression);\n    const oldValue = this.variables.get(node.variableName);\n    if (oldValue && typeof oldValue !== typeof result) {\n      throw new Error(\n        `Variable ${\n          node.variableName\n        } is already type ${typeof oldValue}; cannot set equal to ${result} of type ${typeof result}`,\n      );\n    }\n    this.variables.set(node.variableName, result);\n  }\n\n  /**\n   * Evaluates the given conditional node\n   * Returns the statements to be run as a result of it (if any)\n   */\n  evaluateConditional(node) {\n    if (node.type === 'IfNode') {\n      if (this.evaluateExpressionOrLiteral(node.expression)) {\n        return node.statement;\n      }\n    } else if (node.type === 'IfElseNode' || node.type === 'ElseIfNode') {\n      if (this.evaluateExpressionOrLiteral(node.expression)) {\n        return node.statement;\n      }\n\n      if (node.elseStatement) {\n        return this.evaluateConditional(node.elseStatement);\n      }\n    } else {\n      // ElseNode\n      return node.statement;\n    }\n\n    return null;\n  }\n\n  evaluateFunctionCall(node) {\n    if (this.functions[node.functionName]) {\n      return this.functions[node.functionName](...node.args.map(this.evaluateExpressionOrLiteral, this));\n    }\n    throw new Error(`Function \"${node.functionName}\" not found`);\n  }\n\n  /**\n   * Evaluates an expression or literal down to its final value\n   */\n  evaluateExpressionOrLiteral(node) {\n    // A combined array of text and inline expressions to be treated as one.\n    // Could probably be cleaned up by introducing a new node type.\n    if (Array.isArray(node)) {\n      return node.reduce((acc, n) => {\n        return acc + this.evaluateExpressionOrLiteral(n).toString();\n      }, '');\n    }\n\n    const nodeHandlers = {\n      UnaryMinusExpressionNode: (a: number) => {\n        return -a;\n      },\n      ArithmeticExpressionAddNode: (a: any, b: any) => {\n        return a + b;\n      },\n      ArithmeticExpressionMinusNode: (a: number, b: number) => {\n        return a - b;\n      },\n      ArithmeticExpressionExponentNode: (a: number, b: number) => {\n        return a ** b;\n      },\n      ArithmeticExpressionMultiplyNode: (a: number, b: number) => {\n        return a * b;\n      },\n      ArithmeticExpressionDivideNode: (a: number, b: number) => {\n        return a / b;\n      },\n      ArithmeticExpressionModuloNode: (a: number, b: number) => {\n        return a % b;\n      },\n      NegatedBooleanExpressionNode: (a: any) => {\n        return !a;\n      },\n      BooleanOrExpressionNode: (a: any, b: any) => {\n        return a || b;\n      },\n      BooleanAndExpressionNode: (a: any, b: any) => {\n        return a && b;\n      },\n      BooleanXorExpressionNode: (a: number, b: number) => {\n        // eslint-disable-next-line no-bitwise\n        return !!(a ^ b);\n      }, // eslint-disable-line no-bitwise\n      EqualToExpressionNode: (a: any, b: any) => {\n        return a === b;\n      },\n      NotEqualToExpressionNode: (a: any, b: any) => {\n        return a !== b;\n      },\n      GreaterThanExpressionNode: (a: number, b: number) => {\n        return a > b;\n      },\n      GreaterThanOrEqualToExpressionNode: (a: number, b: number) => {\n        return a >= b;\n      },\n      LessThanExpressionNode: (a: number, b: number) => {\n        return a < b;\n      },\n      LessThanOrEqualToExpressionNode: (a: number, b: number) => {\n        return a <= b;\n      },\n      TextNode: (a: { text: any }) => {\n        return a.text;\n      },\n      EscapedCharacterNode: (a: { text: string | any[] }) => {\n        return this.noEscape ? a.text : a.text.slice(1);\n      },\n      NumericLiteralNode: (a: { numericLiteral: string }) => {\n        return parseFloat(a.numericLiteral);\n      },\n      StringLiteralNode: (a: { stringLiteral: any }) => {\n        return `${a.stringLiteral}`;\n      },\n      BooleanLiteralNode: (a: { booleanLiteral: string }) => {\n        return a.booleanLiteral === 'true';\n      },\n      VariableNode: (a: { variableName: any }) => {\n        return this.variables.get(a.variableName);\n      },\n      FunctionCallNode: (a: any) => {\n        return this.evaluateFunctionCall(a);\n      },\n      InlineExpressionNode: (a: any) => {\n        return a;\n      },\n    };\n\n    const handler = nodeHandlers[node.type];\n    if (!handler) {\n      throw new Error(`node type not recognized: ${node.type}`);\n    }\n\n    return handler(\n      node instanceof nodeTypes.Expression\n        ? this.evaluateExpressionOrLiteral(node.expression || node.expression1)\n        : node,\n      node.expression2 ? this.evaluateExpressionOrLiteral(node.expression2) : node,\n    );\n  }\n}\n", "import parseLine from './line-parser';\nimport { CommandResult, OptionsResult, TextResult } from './results';\nimport { Runner } from './runner';\n\ninterface props {\n  dialogue: string;\n  variableStorage?: any;\n  functions?: any;\n  handleCommand?: any;\n  combineTextAndOptionsResults?: any;\n  locale?: any;\n  startAt?: string;\n}\n\nexport default class YarnBound {\n  static OptionsResult: OptionsResult;\n  static TextResult: TextResult;\n  static CommandResult: CommandResult;\n  public handleCommand: any;\n  public combineTextAndOptionsResults: any;\n  public bufferedNode: any;\n  public currentResult: any;\n  public history: any;\n  public locale: any;\n  public runner: any;\n  private generator: any;\n\n  constructor({\n    dialogue,\n    variableStorage,\n    functions,\n    handleCommand,\n    combineTextAndOptionsResults,\n    locale = undefined,\n    startAt = 'Start',\n  }: props) {\n    this.handleCommand = handleCommand;\n    this.combineTextAndOptionsResults = combineTextAndOptionsResults;\n    this.bufferedNode = null;\n    this.currentResult = null;\n    this.history = [];\n    this.locale = locale;\n    this.runner = new Runner();\n    this.runner.noEscape = true;\n\n    this.runner.load(dialogue);\n\n    if (variableStorage) {\n      variableStorage.display = variableStorage.display || variableStorage.get;\n      this.runner.setVariableStorage(variableStorage);\n    }\n    if (functions) {\n      Object.entries(functions).forEach((entry) => {\n        this.registerFunction(...entry);\n      });\n    }\n\n    this.jump(startAt);\n  }\n\n  jump(startAt: string) {\n    this.generator = this.runner.run(startAt);\n    this.bufferedNode = null;\n    this.advance();\n  }\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  advance(optionIndex: undefined | number = undefined) {\n    if (typeof optionIndex !== 'undefined' && this.currentResult && this.currentResult.select) {\n      this.currentResult.select(optionIndex);\n    }\n\n    let next = this.bufferedNode || this.generator.next().value;\n    let buffered = null;\n\n    // We either return the command as normal or, if a handler\n    // is supplied, use that and don't bother the consuming app\n    if (this.handleCommand) {\n      while (next instanceof CommandResult) {\n        this.handleCommand(next);\n        next = this.generator.next().value;\n      }\n    }\n\n    // Lookahead for combining text + options, and for end of dialogue.\n    // Can't look ahead of option nodes (what would you look ahead at?)\n    if (!(next instanceof OptionsResult)) {\n      const upcoming = this.generator.next();\n      buffered = upcoming.value;\n      if (\n        next instanceof TextResult &&\n        this.combineTextAndOptionsResults &&\n        buffered instanceof OptionsResult\n      ) {\n        next = Object.assign(buffered, next);\n        buffered = null;\n      } else if (next && upcoming.done) {\n        next = Object.assign(next, { isDialogueEnd: true });\n      }\n    }\n\n    if (this.currentResult) {\n      this.history.push(this.currentResult);\n    }\n\n    if (next instanceof TextResult) {\n      parseLine(next, this.locale);\n    } else if (next instanceof OptionsResult) {\n      // @ts-ignore\n      if (next.text) {\n        parseLine(next, this.locale);\n      }\n      // @ts-ignore\n      next.options.forEach((option) => {\n        parseLine(option, this.locale);\n      });\n    }\n\n    this.currentResult = next;\n    this.bufferedNode = buffered;\n  }\n\n  registerFunction(name: string, func: any) {\n    this.runner.registerFunction(name, func);\n  }\n}\n", "import { CommandResult, OptionsResult, TextResult } from './results';\nimport YarnBound from './yarn-bound';\n\nexport { YarnBound, OptionsResult, TextResult, CommandResult };\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "import { YarnBound, CommandResult, TextResult, OptionsResult } from 'yarn-bound-ts';\nimport { executeCommand, addCommand, commands } from './commands';\nimport { functions } from './functions';\nimport { addFormattedGameMessage } from './processor/addFormattedGameMessage';\nimport { splitSpacesExcludeQuotes } from './split-spaces-exclude-quotes';\nimport { YarnNodeType } from './types';\nimport { getCharacterData, invokeStardew } from './stardewMode';\n\ndeclare global {\n  interface Game_System {\n    variableStorage: () => Map<string, any>;\n    _variableStorage: Map<string, any>;\n  }\n}\n\nexport function initializeVariableStorage() {\n  Game_System.prototype.variableStorage = function () {\n    if (!this._variableStorage) {\n      this._variableStorage = new Map<string, unknown>();\n    }\n    return this._variableStorage;\n  };\n  return new Map<string, unknown>();\n}\n\nconst MAX_DIALOG_EXHAUSTION = 3;\n\nPluginManager.registerCommand('pixelmapYarnSpinner', 'yarn', invokeYarn);\nPluginManager.registerCommand('pixelmapYarnSpinner', 'stardew', stardewCaller);\n\nasync function stardewCaller(this: any, args: any) {\n  const characterData = await getCharacterData(args['Character Name']);\n  invokeStardew(characterData);\n}\n\nfunction invokeYarn(this: any, args: any) {\n  const callingEventId: number = this._eventId as number;\n  return fetch(args['Yarn File Path']).then((response) => {\n    if (!response.ok) {\n      throw new Error('HTTP error ' + response.status); // Rejects the promise\n    }\n    const prefix = args['Yarn File Path'].split('.')[0].replace('dialog/', '');\n    const startAt = args['Start At'];\n    void response.text().then((dialogue) => {\n      yarnSpinnerProcesser(prefix, dialogue, startAt, callingEventId).catch((e) => {\n        console.error(e);\n      });\n    });\n  });\n}\n\nexport async function yarnSpinnerProcesser(prefix: string, dialogue: string, startAt: string, callingEventId: number) {\n  const variableStorage = new VariableStorage(prefix);\n  // Stardew Mode is heavily opinionated, and based on https://stardewvalleywiki.com/Modding:Dialogue\n  if (startAt == 'StardewMode') {\n    startAt = getStardewModeNode(variableStorage, dialogue);\n  }\n\n  const runner = new YarnBound({\n    dialogue,\n    startAt: startAt,\n    functions: functions,\n    variableStorage: variableStorage,\n  });\n\n  await processYarnDialog(runner, callingEventId);\n}\n\nfunction getStardewModeNode(variableStorage: VariableStorage, dialogue: string) {\n  // Holiday / Special Events\n\n  // Process Exhaustion\n  let exhaustion: number = variableStorage.getExhaustion();\n  if (!exhaustion) {\n    exhaustion = 0;\n  }\n  if (exhaustion >= MAX_DIALOG_EXHAUSTION) {\n    return getRandomNodeOfType(YarnNodeType.Exhausted, dialogue);\n  }\n  variableStorage.set('dialog_exhaustion', exhaustion + 1);\n\n  // Have we already met the character?\n  const introduced = variableStorage.get('introduced');\n  if (!introduced) {\n    variableStorage.set('introduced', true);\n    return 'Start';\n  }\n\n  // If nothing else matches, grab one of the Anytime nodes\n  return getRandomNodeOfType(YarnNodeType.Anytime, dialogue);\n}\n\nfunction getNodes(dialogue: string) {\n  // Create Temporary Runner for lookups\n  const tempRunner = new YarnBound({\n    dialogue,\n  });\n  return Object.entries(tempRunner.runner.yarnNodes);\n}\n\nfunction getRandomNodeOfType(type: YarnNodeType, dialogue: string) {\n  const nodes = getNodes(dialogue);\n  const filtered = nodes.filter((node) => {\n    return node[0].includes(type);\n  });\n  return filtered[Math.floor(Math.random() * filtered.length)][0];\n}\n\nasync function processYarnDialog(runner: YarnBound, callingEventId: number) {\n  const currentResult = runner.currentResult;\n  switch (currentResult.constructor) {\n    case TextResult:\n      await addFormattedGameMessage(currentResult);\n      if (!currentResult.isDialogueEnd) {\n        if (currentResult.text.trim().length > 0) {\n          // $gameMessage.newPage();\n        }\n        runner.advance();\n        await processYarnDialog(runner, callingEventId);\n      }\n      break;\n    case OptionsResult:\n      const choices = []; // Because some choices may NOT be available, the index within the choices array does\n      const choiceIndexMap = {}; // not always match the index in yarn.  Because of that, we store the position\n      let arrayIndex = 0; // of each option in BOTH arrays within a dictionary, so we can reference them in\n      let yarnIndex = 0; // the callback.\n      for (const option of currentResult.options) {\n        if (option.isAvailable) {\n          // @ts-ignore\n          choices.push(option.text);\n          // @ts-ignore\n          choiceIndexMap[arrayIndex] = yarnIndex;\n          arrayIndex = arrayIndex + 1;\n        }\n        yarnIndex = yarnIndex + 1;\n      }\n\n      $gameMessage.setChoices(choices, 0, 0);\n      $gameMessage.setChoiceCallback(async (responseIndex) => {\n        // @ts-ignore\n        runner.advance(choiceIndexMap[responseIndex]);\n        await processYarnDialog(runner, callingEventId);\n      });\n      break;\n    case CommandResult:\n      await commandHandler(currentResult, callingEventId);\n      if (!currentResult.isDialogueEnd) {\n        runner.advance();\n        await processYarnDialog(runner, callingEventId);\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nasync function commandHandler(cmdResult: CommandResult, callingEventId: number) {\n  // This matcher splits by spaces, but ignores spaces within quotes\n  const splitCmd = splitSpacesExcludeQuotes(cmdResult.command);\n  const cmd = splitCmd[0];\n  await executeCommand(cmd, splitCmd.slice(1), callingEventId);\n}\n\nconst storage = new Map<string, unknown>();\nclass VariableStorage {\n  storage: Map<string, unknown>;\n  prefix: string;\n\n  constructor(prefix: string) {\n    // this.storage = MMO_Core_Player.mmoVariableStorage as Map<string, unknown>;\n    this.storage = storage;\n    this.prefix = prefix;\n  }\n\n  getExhaustion() {\n    return this.storage.get(this.prefix + '_dialog_exhaustion') as number;\n  }\n\n  get(key: string) {\n    const retrievalKey = key.startsWith('global_') ? key : this.prefix + '_' + key;\n    return this.storage.get(retrievalKey) ?? 'unknown';\n  }\n\n  set(key: string, value: any) {\n    const retrievalKey = key.startsWith('global_') ? key : this.prefix + '_' + key;\n    this.storage.set(retrievalKey, value);\n  }\n}\n\nexport { addCommand, commands };\n", "/**\n * Adds X amount of gold to the player\n * @param amount - The amount of gold to add\n * @remarks Player\n */\nexport function add_gold(_callingEventId: number, amount: number) {\n  $gameParty.gainGold(amount);\n}\n", "export enum DIRECTION {\n  up = 8,\n  down = 2,\n  left = 4,\n  right = 6,\n}\n\nexport enum FADE_TYPE {\n  fade_black = 0,\n  fade_white = 1,\n  no_fade = 2,\n}\n\nexport enum BALLOON_TYPE {\n  exclamation = 1,\n  question = 2,\n  music_note = 3,\n  heart = 4,\n  anger = 5,\n  sweat = 6,\n  frustration = 7,\n  silence = 8,\n  light_bulb = 9,\n  zzz = 10,\n}\n", "import { DIRECTION } from './enums';\n\nexport function getItemIdFromName(itemName: string): number {\n  for (const item of $dataItems) {\n    if (item && item.name === itemName) {\n      return item.id;\n    }\n  }\n  throw 'Item could not be found by name';\n}\n\nexport function getEventIdByName(name: string): number {\n  for (const event of $dataMap.events) {\n    if (event?.name == name) {\n      return event.id;\n    }\n  }\n  throw new Error('Could not locate an event with name: ' + name);\n}\n\nexport function getMapIdByName(name: string): number {\n  for (const map of $dataMapInfos) {\n    if (map?.name == name) {\n      // @ts-ignore\n      return map.id;\n    }\n  }\n  throw new Error('Could not locate a map with name: ' + name);\n}\n\nexport function getEnumKeyByEnumValue(myEnum: any, enumValue: number | string): string {\n  let keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\n  return keys.length > 0 ? keys[0] : '';\n}\n\nexport async function moveEntity(\n  _callingEventId: number,\n  direction_name: keyof DIRECTION,\n  distance: number,\n  speed: number,\n  event: Game_Event,\n  synchronous: boolean,\n) {\n  return new Promise<void>(async (finalResolve) => {\n    if (!synchronous) {\n      finalResolve();\n    }\n    let distanceTraveled = 0;\n    while (distanceTraveled < distance) {\n      await new Promise<void>(async function (resolve, _reject): Promise<void> {\n        const direction: DIRECTION = DIRECTION[direction_name as keyof typeof DIRECTION];\n\n        // Don't start unless not moving\n        await waitUntilNotMoving(event);\n\n        // Force through other events, otherwise it's really inconsistent\n        event.setThrough(true);\n        event.setMoveSpeed(speed);\n        event.moveStraight(direction);\n\n        await new Promise((r) => setTimeout(r, 60));\n\n        // Wait until done moving before continuing\n        await waitUntilNotMoving(event);\n        event.setThrough(false);\n        resolve();\n      });\n      distanceTraveled++;\n    }\n    finalResolve();\n  });\n}\n\nfunction waitUntilNotMoving(event: Game_Event) {\n  return new Promise<void>(function (resolve, _reject) {\n    if (event.isMoving()) {\n      const interval = setInterval(function () {\n        if (!event.isMoving()) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 60);\n    } else {\n      resolve();\n    }\n  });\n}\n", "/**\n * Adds an item with the provided name to the player's inventory, with an optional quantity.\n * @param item_name - Name of the item to add (NOT id!)\n * @param quantity - The quantity of the item to add, default of 1.\n * @remarks Player\n */\nexport function add_item(_callingEventId: number, item_name: string, quantity: number = 1) {\n  $gameParty.gainItem($dataItems[getItemIdFromName(item_name)], quantity, false);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { getItemIdFromName } from '../utils';\n", "/**\n * Changes the weather to the specified weather type, with optional intensity and number of frames to blend in.\n * @param weather_type - The type of weather.  (none, rain, storm, snow)\n * @param intensity - On a scale of 1-9, defaults to 4\n * @param duration - Number of frames to blend in, defaults to 24\n * @remarks Camera\n */\n\nexport function change_weather(\n  _callingEventId: number,\n  weather_type: string,\n  intensity: number = 4,\n  duration: number = 24,\n) {\n  $gameScreen.changeWeather(weather_type, intensity, duration);\n}\n", "/**\n * Fade in the screen back to normal\n * @param duration - Length of time for fade-in duration, default of 24 frames\n * @remarks Camera\n */\nexport function fade_in(_callingEventId: number, duration: number = 24) {\n  $gameScreen.startTint([0, 0, 0, 0], duration);\n  $gameScreen.startFadeIn(duration);\n}\n", "/**\n * Fade out the screen (to black, or optionally to a color)\n * @param duration - Length of time for fade-out duration, default of 24 frames\n * @param red - Red value of the color to fade to, default of 0 (0-255 range)\n * @param green - Green value of the color to fade to, default of 0 (0-255 range)\n * @param blue - Blue value of the color to fade to, default of 0 (0-255 range)\n * @param grey - Greyness, default of 0 (0-100 range), 100 is fully black & white.\n * @param alpha - Alpha value of the color to fade to, default of 1 (0-1 range, 0.5 is half transparent)\n * @remarks Camera\n */\nexport function fade_out(\n  _callingEventId: number,\n  duration: number = 24,\n  red: number = -255,\n  green: number = -255,\n  blue: number = -255,\n  grey: number = 0,\n  alpha: number = 1,\n) {\n  red = red ?? -255;\n  green = green ?? -255;\n  blue = blue ?? -255;\n  grey = grey ?? -255;\n  alpha = alpha ?? 1;\n\n  $gameScreen.startTint([red * alpha, green * alpha, blue * alpha, grey * alpha], duration);\n}\n", "/**\n * Flash the screen (to white, or optionally to a color)\n * @param duration - Length of time for fade-out duration, default of 24 frames\n * @param red - Red value of the color to fade to, default of 0 (0-255 range)\n * @param green - Green value of the color to fade to, default of 0 (0-255 range)\n * @param blue - Blue value of the color to fade to, default of 0 (0-255 range)\n * @param intensity - How intense should the flash be?  Default of 255, which is maximum intensity.\n * @remarks Camera\n */\nexport function flash_screen(\n  _callingEventId: number,\n  duration: number = 8,\n  red: number = 0,\n  green: number = 0,\n  blue: number = 0,\n  intensity: number = 255,\n) {\n  $gameScreen.startFlash([red, green, blue, intensity], duration);\n}\n", "/**\n * Hides the entity with the given name.  If no entity provided, hides the calling entity\n * @param entity_name - Name of the event to hide.  NOT the ID!\n * @remarks Event\n */\nexport function hide_event(_callingEventId: number, entity_name: string) {\n  // If no entity passed in, default to the entity that called hideEntity\n  const targetEventId = entity_name != undefined ? getEventIdByName(entity_name) : _callingEventId;\n  const gameEvent = $gameMap.event(targetEventId);\n\n  gameEvent.setOpacity(0);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { getEventIdByName } from '../utils';\n", "/**\n * Move an event\n * @example <<MoveEvent MovementMan down 4 0.25>>\n * @param event_name - The Name of the event to move (not ID!).\n * @param direction_name - The direction to move the event in.  (up, down, left, right)\n * @param distance - The number of tiles to move the event\n * @param speed - The speed to move the event at.  Default of 0.25\n * @remarks Event\n */\nexport async function move_event(\n  _callingEventId: number,\n  event_name: string,\n  direction_name: keyof DIRECTION,\n  distance: number,\n  speed: number = 0.25,\n) {\n  const targetEventId = getEventIdByName(event_name);\n  const event = $gameMap._events[targetEventId];\n\n  return moveEntity(_callingEventId, direction_name, distance, speed, event, false);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\nimport { getEventIdByName, moveEntity } from '../utils';\n", "/**\n * Move calling event\n * @example <<move_self down 4 0.25>>\n * @param direction_name - The direction to move the event in.  (up, down, left, right)\n * @param distance - The number of tiles to move the event\n * @param speed - The speed to move the event at.  Default of 0.25\n * @remarks Event\n */\nexport async function move_self(\n  _callingEventId: number,\n  direction_name: keyof DIRECTION,\n  distance: number,\n  speed: number = 0.25,\n) {\n\n  const event = $gameMap._events[_callingEventId];\n  return moveEntity(_callingEventId, direction_name, distance, speed, event, false);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\nimport { moveEntity } from '../utils';\n", "/**\n * Plays a music file\n * @param music_name - Name of the music file to play\n * @param volume - Volume to play it at, defaults to full volume (100)\n * @remarks Audio\n */\nexport function play_music(_callingEventId: number, music_name: string, volume: number = 100) {\n  AudioManager.playBgm({\n    name: music_name,\n    pos: 0,\n    pan: 0,\n    pitch: 100,\n    volume: volume,\n  });\n}\n", "/**\n * Plays a sound file\n * @param sound_name - Name of the sound file to play\n * @param volume - Volume to play it at, defaults to full volume (100)\n * @remarks Audio\n */\nexport function play_sound(_callingEventId: number, sound_name: string, volume: number = 100) {\n  AudioManager.playSe({\n    name: sound_name,\n    pan: 0,\n    pitch: 100,\n    volume: volume,\n    pos: 0,\n  });\n}\n", "/**\n * Remove X amount of gold to the player\n * @param amount - The amount of gold to remove\n * @remarks Player\n */\nexport function remove_gold(_callingEventId: number, amount: number) {\n  $gameParty.loseGold(amount);\n}\n", "/**\n * Adds an item with the provided name to the player's inventory, with an optional quantity.\n * @param item_name - Name of the item to add (NOT id!)\n * @param quantity - The quantity of the item to add, default of 1.\n * @remarks Player\n */\nexport function remove_item(_callingEventId: number, item_name: string, quantity: number = 1) {\n  $gameParty.loseItem($dataItems[getItemIdFromName(item_name)], quantity, false);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { getItemIdFromName } from '../utils';\n", "/**\n * Sets the background of the message window; options are 0 (fully opaque), 1 (transparent), 2 (invisible background). The default is 0.\n * @param opacity - The opacity of the background, 0, 1, or 2.\n * @remarks Message\n */\nexport function set_background(_callingEventId: number, opacity: number = 0) {\n  if (opacity < 0 || opacity > 2) {\n    throw new Error('Invalid opacity level, must be between 0 and two');\n  }\n\n  $gameMessage.setBackground(opacity);\n}\n", "/**\n * Changes the direction the provided event name is facing.\n * @param direction - The direction to face (up, down, left, right)\n * @param event_name - The name of the event to face (not ID!).  If not provided, defaults to the calling event\n * @remarks Event\n */\nexport function set_facing(_callingEventId: number, event_name: string, direction: keyof DIRECTION) {\n  const targetEventId = getEventIdByName(event_name);\n  const parsedDirection: DIRECTION = DIRECTION[direction as keyof typeof DIRECTION];\n  $gameMap._events[targetEventId].setDirection(parsedDirection);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\nimport { getEventIdByName } from '../utils';\n", "/**\n * Teleports the player to the specified map name, at a specific x and y.\n * @param map_name - Name (NOT id!) of the map to teleport the player to.\n * @param x - The x coordinate to teleport the player to.\n * @param y - The y coordinate to teleport the player to.\n * @param direction - The direction the player should face after teleporting, defaults to current player direction (up, down, left, right)\n * @param fade_type - The type of fade to use when teleporting, defaults to no_fade. (fade_black, fade_white, no_fade)\n * @remarks Teleport\n */\nexport function set_level(\n  _callingEventId: number,\n  map_name: string,\n  x: number,\n  y: number,\n  direction: keyof DIRECTION = getEnumKeyByEnumValue(DIRECTION, $gamePlayer.direction()) as keyof DIRECTION,\n  fade_type: keyof FADE_TYPE = 'no_fade' as keyof FADE_TYPE,\n) {\n  const parsedDirection: DIRECTION = DIRECTION[direction as keyof typeof DIRECTION];\n  $gamePlayer.reserveTransfer(\n    getMapIdByName(map_name),\n    x,\n    y,\n    parsedDirection,\n    FADE_TYPE[fade_type as keyof typeof FADE_TYPE],\n  );\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION, FADE_TYPE } from '../enums';\nimport { getEnumKeyByEnumValue, getMapIdByName } from '../utils';\n", "/**\n * Changes the direction the calling event is facing.\n * @param direction - The direction to face (up, down, left, right)\n * @remarks Event\n */\nexport function set_self_facing(_callingEventId: number, direction: keyof DIRECTION) {\n  const parsedDirection: DIRECTION = DIRECTION[direction as keyof typeof DIRECTION];\n  $gameMap._events[_callingEventId].setDirection(parsedDirection);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\n", "/**\n * Shows a balloon icon above an event.  Defaults to the calling event.  Can optionally pass in \"player\"for event_name if you'd like it to appear above the player.\n   @param balloon_type - The type of balloon to show.  (exclamation, question, music_note, heart, anger, sweat, frustration, silence, light_bulb, zzz)\n * @param event_name - The name of the event to show (not ID!).  If not provided, defaults to the calling event, or the player if \"player\" is specified.\n * @remarks Event\n */\nexport function show_balloon(_callingEventId: number, balloon_type: keyof BALLOON_TYPE, event_name: string) {\n  if (event_name == 'player') {\n    // @ts-ignore\n    $gameTemp.requestBalloon($gamePlayer, BALLOON_TYPE[balloon_type as keyof typeof BALLOON_TYPE]);\n  } else if (event_name == undefined) {\n    // @ts-ignore\n    $gameTemp.requestBalloon(\n      $gameMap._events[_callingEventId],\n      BALLOON_TYPE[balloon_type as keyof typeof BALLOON_TYPE],\n    );\n  } else {\n    const targetEventId = getEventIdByName(event_name);\n    // @ts-ignore\n    $gameTemp.requestBalloon($gameMap._events[targetEventId], BALLOON_TYPE[balloon_type as keyof typeof BALLOON_TYPE]);\n  }\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { BALLOON_TYPE } from '../enums';\nimport { getEventIdByName } from '../utils';\n", "/**\n * Shows the event (if it's hidden).  If no event name provided, defaults to calling event.\n * @param event_name - The name of the event to show (not ID!).  If not provided, defaults to the calling event\n * @param opacity - The opacity to show the event at.  Defaults to 1 (fully visible)\n * @remarks Event\n */\nexport function show_event(_callingEventId: number, event_name: string, opacity: number = 1.0) {\n  if (arguments.length > 1) {\n    // @ts-ignore\n    opacity = parseFloat(opacity);\n  }\n  const targetEventId = event_name != undefined ? getEventIdByName(event_name) : _callingEventId;\n  const gameEvent = $gameMap.event(targetEventId);\n\n  if (opacity > 1) {\n    throw new Error('Opacity greater than 1, please use a value between 0 and 1');\n  }\n  if (opacity < 0) {\n    throw new Error('Opacity less than 0, please use a value between 0 and 1');\n  }\n\n  const opacityInHexFormat = opacity * 255; // 255 is fully opaque\n  gameEvent.setOpacity(opacityInHexFormat);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { getEventIdByName } from '../utils';\n", "/**\n * Stops the playing music.\n * @param duration - Fadeout time, defaults to 0 (no fadeout)\n * @remarks Audio\n */\nexport function stop_music(_callingEventId: number, duration: number = 0) {\n  $gameSystem.saveBgm();\n  AudioManager.fadeOutBgm(duration);\n}\n", "/**\n * Move an event (Same as move_event, except blocks script execution until movement is complete)\n * @example <<sync_move MovementMan down 4 0.25>>\n * @param event_name - The Name of the event to move (not ID!).\n * @param direction_name - The direction to move the event in.  (up, down, left, right)\n * @param distance - The number of tiles to move the event\n * @param speed - The speed to move the event at.  Default of 0.25\n * @remarks Event\n */\nexport async function sync_move_event(\n  _callingEventId: number,\n  event_name: string,\n  direction_name: keyof DIRECTION,\n  distance: number,\n  speed: number = 0.25,\n) {\n  const targetEventId = getEventIdByName(event_name);\n  const event = $gameMap._events[targetEventId];\n  return moveEntity(_callingEventId, direction_name, distance, speed, event, true);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\nimport { getEventIdByName, moveEntity } from '../utils';\n", "/**\n * Move calling event (Same as move_self, except blocks script execution until movement is complete)\n * @example <<sync_move MovementMan down 4 0.25>>\n * @param direction_name - The direction to move the event in.  (up, down, left, right)\n * @param distance - The number of tiles to move the event\n * @param speed - The speed to move the event at.  Default of 0.25\n * @remarks Event\n */\nexport async function sync_move_self(\n  _callingEventId: number,\n  direction_name: keyof DIRECTION,\n  distance: number,\n  speed: number = 0.25,\n) {\n  const event = $gameMap._events[_callingEventId];\n  return moveEntity(_callingEventId, direction_name, distance, speed, event, true);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { DIRECTION } from '../enums';\nimport { moveEntity } from '../utils';\n", "/**\n * Teleports an event to the specified x and y.  If no event name specified, defaults to the calling event.\n * @param event_name - Name (NOT id!) of the event to teleport.\n * @param x - The x coordinate to teleport the event to.\n * @param y - The y coordinate to teleport the event to.\n * @remarks Teleport\n */\nexport function teleport_event(_callingEventId: number, event_name: string, x: number, y: number) {\n  const targetEventId = getEventIdByName(event_name);\n  const event = $gameMap._events[targetEventId];\n  event.setPosition(x, y);\n}\n\n// Imports have to be on bottom because of ridiculous TSDoc bug https://github.com/TypeStrong/typedoc/issues/603\nimport { getEventIdByName } from '../utils';\n", "/**\n * Teleports an event to the specified x and y.  If no event name specified, defaults to the calling event.\n * @param x - The x coordinate to teleport the event to.\n * @param y - The y coordinate to teleport the event to.\n * @remarks Teleport\n */\nexport function teleport_self(_callingEventId: number, x: number, y: number) {\n  const targetEventId = _callingEventId;\n  const event = $gameMap._events[targetEventId];\n  event.setPosition(x, y);\n}\n\n", "/**\n * Waits for a given amount of time.\n * @param duration - The amount of time to wait in frames\n * @remarks Script\n */\nexport async function wait(_callingEventId: number, duration: number) {\n  await new Promise((r) => setTimeout(r, duration));\n}\n", "import { add_gold } from './add_gold';\nimport { add_item } from './add_item';\nimport { change_weather } from './change_weather';\nimport { fade_in } from './fade_in';\nimport { fade_out } from './fade_out';\nimport { flash_screen } from './flash_screen';\nimport { hide_event } from './hide_event';\nimport { move_event } from './move_event';\nimport { move_self } from './move_self';\nimport { play_music } from './play_music';\nimport { play_sound } from './play_sound';\nimport { remove_gold } from './remove_gold';\nimport { remove_item } from './remove_item';\nimport { set_background } from './set_background';\nimport { set_facing } from './set_facing';\nimport { set_level } from './set_level';\nimport { set_self_facing } from './set_self_facing';\nimport { show_balloon } from './show_balloon';\nimport { show_event } from './show_event';\nimport { stop_music } from './stop_music';\nimport { sync_move_event } from './sync_move_event';\nimport { sync_move_self } from './sync_move_self';\nimport { teleport_event } from './teleport_event';\nimport { teleport_self } from './teleport_self';\nimport { wait } from './wait';\n\nexport const commands = new Map<string, Function>([\n  ['add_item', add_item],\n  ['add_gold', add_gold],\n  ['change_weather', change_weather],\n  ['fade_out', fade_out],\n  ['fade_in', fade_in],\n  ['flash_screen', flash_screen],\n  ['hide_event', hide_event],\n  ['move_event', move_event],\n  ['move_self', move_self],\n  ['play_music', play_music],\n  ['play_sound', play_sound],\n  ['remove_item', remove_item],\n  ['remove_gold', remove_gold],\n  ['set_facing', set_facing],\n  ['set_level', set_level],\n  ['show_balloon', show_balloon],\n  ['show_event', show_event],\n  ['stop_music', stop_music],\n  ['teleport_event', teleport_event],\n  ['teleport_self', teleport_self],\n  ['set_background', set_background],\n  ['set_self_facing', set_self_facing],\n  ['sync_move_event', sync_move_event],\n  ['sync_move_self', sync_move_self],\n  ['wait', wait],\n]);\n\nfunction isNum(value: string) {\n  return /^\\d+$/.test(value);\n}\n\n/**\n * Add's a custom command to the command list, to make yarn-bound easily extensible.\n * @param commandName - The name of the command to add.\n * @param command - The function to execute when the command is called.\n */\nexport async function addCommand(commandName: string, command: Function) {\n  if (commands.get(commandName)) {\n    console.error(`Command ${commandName} already exists.  Skipping add.`);\n  } else {\n    commands.set(commandName, command);\n  }\n}\n\n/**\n * Executes a command.\n * @param command\n * @param args\n * @param callingEventId\n */\nexport async function executeCommand(command: string, args: any, callingEventId: number) {\n  if (commands.get(command)) {\n    for (let i = 0; i < args.length; i++) {\n      if (isNum(args[i])) {\n        args[i] = parseInt(args[i]);\n      }\n    }\n    // @ts-ignore\n    return (await commands.get(command)(callingEventId, ...args)) as unknown as Function;\n  }\n  throw new Error('Invalid command, cannot find: ' + command);\n}\n", "/**\n * Returns the value of the variable with the given name (starts at global window).\n * @param variable_name - The name of global variable to retrieve.\n * @returns value of the variable.\n */\n\nexport function get_variable(variable_name: string) {\n  return get(window, variable_name);;\n}\n\n// @ts-ignore\nimport get from 'lodash.get';\n", "export function playerHasItemByName(itemName: string) {\n  for (const item of $dataItems) {\n    if (item && item.name === itemName) {\n      return $gameParty.hasItem(item, true);\n    }\n  }\n  return false;\n}\n", "/**\n * Returns true if the player has the specified item.\n * @param itemName - The name of the item to check for (NOT ID!)\n * @returns True if the player has the item, false otherwise.\n */\n\nexport function has_item(itemName: string) {\n  return playerHasItemByName(itemName);\n}\n\nimport { playerHasItemByName } from '../playerHasItemByName';\n", "/**\n * Returns the number of the given item the player has.\n * @param itemName - The name of the item to check for (NOT ID!)\n * @returns Number of the given item the player has.\n */\nimport { getItemIdFromName } from '../utils';\n\nexport function item_count(itemName: string) {\n  const itemId = getItemIdFromName(itemName);\n  return $gameParty.numItems($dataItems[itemId]);\n}\n", "/**\n * Given a min and max, return a random number between them.\n * @param min - The minimum number to return.\n * @param max - The maximum number to return.\n * @returns A random number between min and max.\n */\nexport function random_range(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n", "import { get_variable } from './get_variable';\nimport { has_item } from './has_item';\nimport { item_count } from './item_count';\nimport { random_range } from './random_range';\n\nexport const functions = {\n  has_item: has_item,\n  item_count: item_count,\n  random_range: random_range,\n  get_variable: get_variable,\n};\n", "export function wrap(\n  str: string,\n  options: {\n    trim?: boolean;\n    cut?: boolean;\n    escape?: string;\n    newline?: string;\n    width?: number;\n    indent?: string;\n  },\n) {\n  options = options || {};\n  if (str == null) {\n    return str;\n  }\n  const width = options.width || 50;\n  const indent = typeof options.indent === 'string' ? options.indent : '';\n  const newline = options.newline || '\\n' + indent;\n  const escape = typeof options.escape === 'function' ? options.escape : identity;\n  let regexString = '.{1,' + width + '}';\n  if (!options.cut) {\n    regexString += '([\\\\s\\u200B]+|$)|[^\\\\s\\u200B]+?([\\\\s\\u200B]+|$)';\n  }\n  const re = new RegExp(regexString, 'g');\n  const lines = str.match(re) || [];\n  let result =\n    indent +\n    lines\n      .map(function (line) {\n        if (line.slice(-1) === '\\n') {\n          line = line.slice(0, line.length - 1);\n        }\n        return escape(line);\n      })\n      .join(newline);\n  if (options.trim) {\n    result = result.replace(/[ \\t]*$/gm, '');\n  }\n  return result;\n}\n\nfunction identity(str: string) {\n  return str;\n}\n", "/**\n * Updates the character's face image within gameMessage if available.\n * @param currentResult\n */\nexport function updateCharacterPortrait(currentResult: any) {\n  const character = currentResult.markup.find((markup: { name: string }) => {\n    return markup.name === 'character';\n  });\n  if (character) {\n    $gameMessage.setFaceImage(character.properties.name, 0);\n  }\n}\n", "import { wrap } from '../wrap';\nimport { updateCharacterPortrait } from './updateCharacterPortrait';\n\nlet callBackAfterMessageClose = () => {};\nWindow_Base.prototype.updateClose = function () {\n  // @ts-ignore\n  if (this._closing) {\n    // @ts-ignore\n    this.openness -= 32;\n    // @ts-ignore\n    if (this.isClosed()) {\n      // @ts-ignore\n      this._closing = false;\n    }\n    // @ts-ignore\n    if (!this._closing) callBackAfterMessageClose();\n  }\n};\n\nexport async function addFormattedGameMessage(currentResult: any) {\n  return new Promise<void>((resolve) => {\n    updateCharacterPortrait(currentResult);\n    if (currentResult.text.trim().length > 0) {\n      let text = currentResult.text;\n\n      // Add Special Color\n      const special = currentResult.markup.find((markup: { name: string }) => {\n        return markup.name === 'special';\n      });\n      if (special) {\n        text =\n          currentResult.text.slice(0, special.position) +\n          '\\\\C[1]' +\n          currentResult.text.slice(special.position, special.position + special.length) +\n          '\\\\C[0]' +\n          currentResult.text.slice(special.position + special.length);\n      }\n      callBackAfterMessageClose = () => {\n        callBackAfterMessageClose = () => {};\n        resolve();\n\n      };\n      $gameMessage.add(wrap(text, { width: 58 }));\n    }\n  });\n}\n", "/**\n * Splits a string on each space, unless the space is within a pair of quotes.\n * @param input\n */\nexport function splitSpacesExcludeQuotes(input: string) {\n  const matches = input.match(/\\\\?.|^$/g);\n  if (matches) {\n    // @ts-ignore\n    return matches.reduce(\n      (p: { quote: number; a: any[] }, c: string) => {\n        if (c === '\"') {\n          // eslint-disable-next-line no-bitwise\n          p.quote ^= 1;\n        } else if (!p.quote && c === ' ') {\n          p.a.push('');\n        } else {\n          p.a[p.a.length - 1] += c.replace(/\\\\(.)/, '$1');\n        }\n        return p;\n      },\n      { a: [''] },\n      // @ts-ignore\n    ).a;\n  }\n}\n", "export { Composer } from './compose/composer.js';\nexport { Document } from './doc/Document.js';\nexport { Schema } from './schema/Schema.js';\nexport { YAMLError, YAMLParseError, YAMLWarning } from './errors.js';\nexport { Alias } from './nodes/Alias.js';\nexport { isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq } from './nodes/Node.js';\nexport { Pair } from './nodes/Pair.js';\nexport { Scalar } from './nodes/Scalar.js';\nexport { YAMLMap } from './nodes/YAMLMap.js';\nexport { YAMLSeq } from './nodes/YAMLSeq.js';\nimport * as cst from './parse/cst.js';\nexport { cst as CST };\nexport { Lexer } from './parse/lexer.js';\nexport { LineCounter } from './parse/line-counter.js';\nexport { Parser } from './parse/parser.js';\nexport { parse, parseAllDocuments, parseDocument, stringify } from './public-api.js';\nexport { visit, visitAsync } from './visit.js';\n", "const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n", "import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n", "import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n", "import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n", "import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n", "import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n", "import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n", "/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n", "const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n", "import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n", "function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n", "import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n", "import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n", "import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n", "import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n", "import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n", "function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n", "import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n", "import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n", "import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n", "import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n", "import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n", "import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n", "/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n", "class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n", "function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n", "function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n", "import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n", "import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n", "import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n", "import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n", "function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n", "import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n", "import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n", "import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n", "import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n", "function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n", "import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n", "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n", "import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n", "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n", "import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n", "/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n", "const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n", "import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n", "/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n", "import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n", "import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n", "// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n", "export function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n", "// import { yarnSpinnerProcesser } from '../index';\nimport YAML from 'yaml';\nimport { capitalizeFirstLetter } from '../docUtils/capitalizeFirstLetter';\n\nexport interface StardewCharacterData {\n  name: string;\n  occupation: string;\n  age: number;\n  gender: string;\n  speech_style: Array<string>;\n  likes: Array<string>;\n  dislikes: Array<string>;\n}\n\nexport async function getCharacterData(characterName: string) {\n  const charDataRaw = await fetch(`dialog/${characterName}/character.yaml`).then((response) => {\n    if (!response.ok) {\n      console.error('Could not load character data for ' + characterName);\n      throw new Error('HTTP error ' + response.status); // Rejects the promise\n    }\n    return response.text();\n  });\n  return YAML.parse(charDataRaw) as StardewCharacterData;\n}\n\nexport function invokeStardew(characterData: StardewCharacterData) {\n  const [pronoun, _obj, _poss] = getPronouns(characterData.gender.toLowerCase() as 'male' | 'female' | 'other');\n  return `${characterData.name} is a ${characterData.gender.toLowerCase()} ${\n    characterData.age\n  } year old ${characterData.occupation.toLowerCase()}.  ${capitalizeFirstLetter(pronoun)} talks in a ${joinWithAnd(\n    characterData.speech_style,\n  ).toLowerCase()}.  ${capitalizeFirstLetter(pronoun)} likes ${joinWithAnd(\n    characterData.likes,\n  ).toLowerCase()}.  ${capitalizeFirstLetter(pronoun)} dislikes ${joinWithAnd(characterData.dislikes).toLowerCase()}.`;\n  // const callingEventId: number = this._eventId as number;\n}\n\nfunction joinWithAnd(arr: Array<string>) {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return firsts.join(', ') + ' and ' + last;\n}\n\nfunction getPronouns(gender: 'male' | 'female' | 'other') {\n  if (gender == 'male') {\n    return ['he', 'him', 'his'];\n  }\n  if (gender == 'female') {\n    return ['she', 'her', 'hers'];\n  }\n  return ['they', 'them', 'theirs'];\n}\n"],
  "mappings": "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I;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;;UAEN;YACE,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,I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",
  "names": ["TextResult", "CommandResult", "OptionsResult", "Lexer", "o", "parse", "self", "Parser", "storage", "YarnBound", "functions", "Symbol", "Map", "map", "string", "get", "DIRECTION", "FADE_TYPE", "BALLOON_TYPE", "map", "get", "stringify", "res", "map", "schema", "node", "schema", "i", "end", "map", "value", "schema", "stringify", "comment", "str", "schema", "map", "schema", "map", "schema", "seq", "schema", "seq", "intIdentify", "schema", "seq", "schema", "pairs", "map", "seq", "pairs", "schema", "omap", "floatNaN", "floatExp", "float", "intIdentify", "intResolve", "n", "intStringify", "intOct", "int", "intHex", "schema", "map", "set", "res", "schema", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "schema", "schema", "res", "composeNode", "composeEmptyNode", "map", "composeNode", "composeEmptyNode", "seq", "composeNode", "composeEmptyNode", "isMap", "map", "CN", "value", "end", "schema", "tag", "SCALAR", "isCollection", "isScalar", "stringify", "visit", "stringify", "BREAK", "SKIP", "REMOVE", "visit", "SCALAR", "isCollection", "isScalar", "ch", "SCALAR", "map", "start", "seq", "stringify", "string"]
}
